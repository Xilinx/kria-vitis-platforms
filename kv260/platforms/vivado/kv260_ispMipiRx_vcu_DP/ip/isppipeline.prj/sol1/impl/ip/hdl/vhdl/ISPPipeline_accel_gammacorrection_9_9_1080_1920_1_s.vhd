-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ISPPipeline_accel_gammacorrection_9_9_1080_1920_1_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (10 downto 0);
    aecin_data245_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    aecin_data245_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    aecin_data245_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    aecin_data245_empty_n : IN STD_LOGIC;
    aecin_data245_read : OUT STD_LOGIC;
    p_dst_data244_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    p_dst_data244_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    p_dst_data244_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    p_dst_data244_full_n : IN STD_LOGIC;
    p_dst_data244_write : OUT STD_LOGIC;
    gamma_lut_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    gamma_lut_ce0 : OUT STD_LOGIC;
    gamma_lut_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of ISPPipeline_accel_gammacorrection_9_9_1080_1920_1_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal lut_p_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_p_ce0 : STD_LOGIC;
    signal lut_p_we0 : STD_LOGIC;
    signal lut_p_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_p_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_p_1_ce0 : STD_LOGIC;
    signal lut_p_1_we0 : STD_LOGIC;
    signal lut_p_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_p_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_p_2_ce0 : STD_LOGIC;
    signal lut_p_2_we0 : STD_LOGIC;
    signal lut_p_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_start : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_done : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_idle : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_ready : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_gamma_lut_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_gamma_lut_ce0 : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_ce0 : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_we0 : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_1_ce0 : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_1_we0 : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_2_ce0 : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_2_we0 : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_start : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_done : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_idle : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_ready : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_aecin_data245_read : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_p_dst_data244_din : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_p_dst_data244_write : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_ce0 : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_1_ce0 : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_2_ce0 : STD_LOGIC;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call10 : BOOLEAN;
    signal grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln68_fu_112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i_V_fu_52 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_4_fu_117_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component ISPPipeline_accel_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        gamma_lut_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        gamma_lut_ce0 : OUT STD_LOGIC;
        gamma_lut_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        lut_p_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        lut_p_ce0 : OUT STD_LOGIC;
        lut_p_we0 : OUT STD_LOGIC;
        lut_p_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        lut_p_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        lut_p_1_ce0 : OUT STD_LOGIC;
        lut_p_1_we0 : OUT STD_LOGIC;
        lut_p_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        lut_p_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        lut_p_2_ce0 : OUT STD_LOGIC;
        lut_p_2_we0 : OUT STD_LOGIC;
        lut_p_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component ISPPipeline_accel_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        aecin_data245_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        aecin_data245_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        aecin_data245_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        aecin_data245_empty_n : IN STD_LOGIC;
        aecin_data245_read : OUT STD_LOGIC;
        p_dst_data244_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        p_dst_data244_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_dst_data244_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_dst_data244_full_n : IN STD_LOGIC;
        p_dst_data244_write : OUT STD_LOGIC;
        p_read1 : IN STD_LOGIC_VECTOR (10 downto 0);
        lut_p_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        lut_p_ce0 : OUT STD_LOGIC;
        lut_p_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        lut_p_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        lut_p_1_ce0 : OUT STD_LOGIC;
        lut_p_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        lut_p_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        lut_p_2_ce0 : OUT STD_LOGIC;
        lut_p_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component ISPPipeline_accel_gammacorrection_9_9_1080_1920_1_s_lut_p_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    lut_p_U : component ISPPipeline_accel_gammacorrection_9_9_1080_1920_1_s_lut_p_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut_p_address0,
        ce0 => lut_p_ce0,
        we0 => lut_p_we0,
        d0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_d0,
        q0 => lut_p_q0);

    lut_p_1_U : component ISPPipeline_accel_gammacorrection_9_9_1080_1920_1_s_lut_p_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut_p_1_address0,
        ce0 => lut_p_1_ce0,
        we0 => lut_p_1_we0,
        d0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_1_d0,
        q0 => lut_p_1_q0);

    lut_p_2_U : component ISPPipeline_accel_gammacorrection_9_9_1080_1920_1_s_lut_p_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut_p_2_address0,
        ce0 => lut_p_2_ce0,
        we0 => lut_p_2_we0,
        d0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_2_d0,
        q0 => lut_p_2_q0);

    grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80 : component ISPPipeline_accel_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_start,
        ap_done => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_done,
        ap_idle => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_idle,
        ap_ready => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_ready,
        gamma_lut_address0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_gamma_lut_address0,
        gamma_lut_ce0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_gamma_lut_ce0,
        gamma_lut_q0 => gamma_lut_q0,
        lut_p_address0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_address0,
        lut_p_ce0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_ce0,
        lut_p_we0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_we0,
        lut_p_d0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_d0,
        lut_p_1_address0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_1_address0,
        lut_p_1_ce0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_1_ce0,
        lut_p_1_we0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_1_we0,
        lut_p_1_d0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_1_d0,
        lut_p_2_address0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_2_address0,
        lut_p_2_ce0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_2_ce0,
        lut_p_2_we0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_2_we0,
        lut_p_2_d0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_2_d0);

    grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92 : component ISPPipeline_accel_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_start,
        ap_done => grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_done,
        ap_idle => grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_idle,
        ap_ready => grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_ready,
        aecin_data245_dout => aecin_data245_dout,
        aecin_data245_num_data_valid => ap_const_lv2_0,
        aecin_data245_fifo_cap => ap_const_lv2_0,
        aecin_data245_empty_n => aecin_data245_empty_n,
        aecin_data245_read => grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_aecin_data245_read,
        p_dst_data244_din => grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_p_dst_data244_din,
        p_dst_data244_num_data_valid => ap_const_lv2_0,
        p_dst_data244_fifo_cap => ap_const_lv2_0,
        p_dst_data244_full_n => p_dst_data244_full_n,
        p_dst_data244_write => grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_p_dst_data244_write,
        p_read1 => p_read1,
        lut_p_address0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_address0,
        lut_p_ce0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_ce0,
        lut_p_q0 => lut_p_q0,
        lut_p_1_address0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_1_address0,
        lut_p_1_ce0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_1_ce0,
        lut_p_1_q0 => lut_p_1_q0,
        lut_p_2_address0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_2_address0,
        lut_p_2_ce0 => grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_2_ce0,
        lut_p_2_q0 => lut_p_2_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln68_fu_112_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_ready = ap_const_logic_1)) then 
                    grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln68_fu_112_p2 = ap_const_lv1_0))) then 
                    grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_ready = ap_const_logic_1)) then 
                    grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_V_fu_52_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_V_fu_52 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln68_fu_112_p2 = ap_const_lv1_0))) then 
                i_V_fu_52 <= i_V_4_fu_117_p2;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_done, grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_done, ap_CS_fsm_state3, icmp_ln68_fu_112_p2, ap_CS_fsm_state4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln68_fu_112_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    aecin_data245_read_assign_proc : process(grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_aecin_data245_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            aecin_data245_read <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_aecin_data245_read;
        else 
            aecin_data245_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_done)
    begin
        if ((grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_done)
    begin
        if ((grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_ignore_call10_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call10 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state3, icmp_ln68_fu_112_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln68_fu_112_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3, icmp_ln68_fu_112_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln68_fu_112_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    gamma_lut_address0 <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_gamma_lut_address0;
    gamma_lut_ce0 <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_gamma_lut_ce0;
    grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_start <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_ap_start_reg;
    grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_start <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_ap_start_reg;
    i_V_4_fu_117_p2 <= std_logic_vector(unsigned(i_V_fu_52) + unsigned(ap_const_lv11_1));
    icmp_ln68_fu_112_p2 <= "1" when (i_V_fu_52 = p_read) else "0";

    lut_p_1_address0_assign_proc : process(ap_CS_fsm_state2, grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_1_address0, grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_1_address0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lut_p_1_address0 <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            lut_p_1_address0 <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_1_address0;
        else 
            lut_p_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    lut_p_1_ce0_assign_proc : process(ap_CS_fsm_state2, grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_1_ce0, grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_1_ce0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lut_p_1_ce0 <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            lut_p_1_ce0 <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_1_ce0;
        else 
            lut_p_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lut_p_1_we0_assign_proc : process(ap_CS_fsm_state2, grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_1_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            lut_p_1_we0 <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_1_we0;
        else 
            lut_p_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lut_p_2_address0_assign_proc : process(ap_CS_fsm_state2, grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_2_address0, grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_2_address0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lut_p_2_address0 <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            lut_p_2_address0 <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_2_address0;
        else 
            lut_p_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    lut_p_2_ce0_assign_proc : process(ap_CS_fsm_state2, grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_2_ce0, grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_2_ce0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lut_p_2_ce0 <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            lut_p_2_ce0 <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_2_ce0;
        else 
            lut_p_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lut_p_2_we0_assign_proc : process(ap_CS_fsm_state2, grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_2_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            lut_p_2_we0 <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_2_we0;
        else 
            lut_p_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lut_p_address0_assign_proc : process(ap_CS_fsm_state2, grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_address0, grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_address0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lut_p_address0 <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            lut_p_address0 <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_address0;
        else 
            lut_p_address0 <= "XXXXXXXX";
        end if; 
    end process;


    lut_p_ce0_assign_proc : process(ap_CS_fsm_state2, grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_ce0, grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_ce0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lut_p_ce0 <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_lut_p_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            lut_p_ce0 <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_ce0;
        else 
            lut_p_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lut_p_we0_assign_proc : process(ap_CS_fsm_state2, grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            lut_p_we0 <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_VITIS_LOOP_55_2_VITIS_LOOP_56_3_fu_80_lut_p_we0;
        else 
            lut_p_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_dst_data244_din <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_p_dst_data244_din;

    p_dst_data244_write_assign_proc : process(grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_p_dst_data244_write, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_dst_data244_write <= grp_gammacorrection_9_9_1080_1920_1_Pipeline_colLoop_fu_92_p_dst_data244_write;
        else 
            p_dst_data244_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
