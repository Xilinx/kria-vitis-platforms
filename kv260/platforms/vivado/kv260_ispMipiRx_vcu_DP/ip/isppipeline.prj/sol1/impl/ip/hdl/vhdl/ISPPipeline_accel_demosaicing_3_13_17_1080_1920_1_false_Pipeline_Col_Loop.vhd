-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ISPPipeline_accel_demosaicing_3_13_17_1080_1920_1_false_Pipeline_Col_Loop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    gain_out_data240_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    gain_out_data240_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    gain_out_data240_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    gain_out_data240_empty_n : IN STD_LOGIC;
    gain_out_data240_read : OUT STD_LOGIC;
    demosaic_out_data241_din : OUT STD_LOGIC_VECTOR (29 downto 0);
    demosaic_out_data241_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    demosaic_out_data241_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    demosaic_out_data241_full_n : IN STD_LOGIC;
    demosaic_out_data241_write : OUT STD_LOGIC;
    p_Val2_18 : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_V_17_1_reload : IN STD_LOGIC_VECTOR (9 downto 0);
    p_Val2_21 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_Val2_17 : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_V_12_1_reload : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_V_11_1_reload : IN STD_LOGIC_VECTOR (9 downto 0);
    p_Val2_16 : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_V_7_1_reload : IN STD_LOGIC_VECTOR (9 downto 0);
    p_Val2_22 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_Val2_20 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_Val2_19 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_Val2_s : IN STD_LOGIC_VECTOR (9 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (10 downto 0);
    trunc_ln : IN STD_LOGIC_VECTOR (0 downto 0);
    linebuffer_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    linebuffer_V_ce0 : OUT STD_LOGIC;
    linebuffer_V_we0 : OUT STD_LOGIC;
    linebuffer_V_d0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    linebuffer_V_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    linebuffer_V_ce1 : OUT STD_LOGIC;
    linebuffer_V_q1 : IN STD_LOGIC_VECTOR (9 downto 0);
    linebuffer_V_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    linebuffer_V_1_ce0 : OUT STD_LOGIC;
    linebuffer_V_1_we0 : OUT STD_LOGIC;
    linebuffer_V_1_d0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    linebuffer_V_1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    linebuffer_V_1_ce1 : OUT STD_LOGIC;
    linebuffer_V_1_q1 : IN STD_LOGIC_VECTOR (9 downto 0);
    linebuffer_V_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    linebuffer_V_2_ce0 : OUT STD_LOGIC;
    linebuffer_V_2_we0 : OUT STD_LOGIC;
    linebuffer_V_2_d0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    linebuffer_V_2_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    linebuffer_V_2_ce1 : OUT STD_LOGIC;
    linebuffer_V_2_q1 : IN STD_LOGIC_VECTOR (9 downto 0);
    linebuffer_V_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    linebuffer_V_3_ce0 : OUT STD_LOGIC;
    linebuffer_V_3_we0 : OUT STD_LOGIC;
    linebuffer_V_3_d0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    linebuffer_V_3_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    linebuffer_V_3_ce1 : OUT STD_LOGIC;
    linebuffer_V_3_q1 : IN STD_LOGIC_VECTOR (9 downto 0);
    line0_V_1 : IN STD_LOGIC_VECTOR (1 downto 0);
    line1_V : IN STD_LOGIC_VECTOR (1 downto 0);
    line2_V : IN STD_LOGIC_VECTOR (1 downto 0);
    line3_V : IN STD_LOGIC_VECTOR (1 downto 0);
    lineStore_1_cast : IN STD_LOGIC_VECTOR (1 downto 0);
    sub219 : IN STD_LOGIC_VECTOR (11 downto 0);
    cmp162 : IN STD_LOGIC_VECTOR (0 downto 0);
    imgblock_V_12_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    imgblock_V_12_out_ap_vld : OUT STD_LOGIC;
    imgblock_V_9_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    imgblock_V_9_out_ap_vld : OUT STD_LOGIC;
    imgblock_V_8_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    imgblock_V_8_out_ap_vld : OUT STD_LOGIC;
    imgblock_V_5_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    imgblock_V_5_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of ISPPipeline_accel_demosaicing_3_13_17_1080_1920_1_false_Pipeline_Col_Loop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln344_reg_1232 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op99_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln344_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal demosaic_out_data241_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal gain_out_data240_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_g_kernel_ap_uint_10_5_s_fu_586_ap_return : STD_LOGIC_VECTOR (12 downto 0);
    signal reg_635 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln344_reg_1232_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln135_reg_1260 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln135_reg_1260_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rgb_bgr_kernel_ap_uint_10_5_s_fu_601_ap_return : STD_LOGIC_VECTOR (12 downto 0);
    signal reg_641 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_rgr_bgb_kernel_ap_uint_10_5_s_fu_618_ap_return : STD_LOGIC_VECTOR (12 downto 0);
    signal reg_647 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_rb_kernel_ap_uint_10_5_s_fu_571_ap_return : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln344_reg_1232_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln135_reg_1260_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp162_read_read_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_1_reg_1227 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_1_reg_1227_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln344_reg_1232_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln344_reg_1232_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln344_reg_1232_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln373_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln373_reg_1236 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln373_reg_1236_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln135_fu_774_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln135_reg_1260_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln135_reg_1260_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln135_reg_1260_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal packed_read1_V_fu_788_p6 : STD_LOGIC_VECTOR (9 downto 0);
    signal packed_read2_V_fu_801_p6 : STD_LOGIC_VECTOR (9 downto 0);
    signal packed_read3_V_fu_814_p6 : STD_LOGIC_VECTOR (9 downto 0);
    signal packed_read4_V_fu_827_p6 : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_V_12_reg_1295 : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_V_12_reg_1295_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_V_12_reg_1295_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_V_12_reg_1295_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_3_reg_1302 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_3_reg_1302_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_3_reg_1302_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_3_reg_1302_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln124_fu_981_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_condition_exit_pp0_iter2_stage0 : STD_LOGIC;
    signal grp_rb_kernel_ap_uint_10_5_s_fu_571_ap_ce : STD_LOGIC;
    signal ap_predicate_op148_call_state3 : BOOLEAN;
    signal ap_predicate_op155_call_state3 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call0 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp148 : BOOLEAN;
    signal grp_g_kernel_ap_uint_10_5_s_fu_586_ap_ce : STD_LOGIC;
    signal ap_predicate_op149_call_state3 : BOOLEAN;
    signal ap_predicate_op154_call_state3 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call1 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call1 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp149 : BOOLEAN;
    signal grp_rgb_bgr_kernel_ap_uint_10_5_s_fu_601_ap_ce : STD_LOGIC;
    signal ap_predicate_op150_call_state3 : BOOLEAN;
    signal ap_predicate_op153_call_state3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp150 : BOOLEAN;
    signal grp_rgr_bgb_kernel_ap_uint_10_5_s_fu_618_ap_ce : STD_LOGIC;
    signal ap_predicate_op151_call_state3 : BOOLEAN;
    signal ap_predicate_op152_call_state3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp151 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_p_Val2_27_reg_471 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_27_reg_471 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_27_reg_471 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter0_imgblock_V_14_1_reg_487 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_imgblock_V_14_1_reg_487 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter2_imgblock_V_14_1_reg_487 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_reg_499 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_reg_499 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_reg_499 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_104_reg_510 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_104_reg_510 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_104_reg_510 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_105_reg_521 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_105_reg_521 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_105_reg_521 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_reg_pp0_iter0_b_5_reg_532 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter1_b_5_reg_532 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter2_b_5_reg_532 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter3_b_5_reg_532 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter4_b_5_reg_532 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter5_b_5_reg_532 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter6_b_5_reg_532 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter7_b_5_reg_532 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter0_g_4_reg_545 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter1_g_4_reg_545 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter2_g_4_reg_545 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter3_g_4_reg_545 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter4_g_4_reg_545 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter5_g_4_reg_545 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter6_g_4_reg_545 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter7_g_4_reg_545 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter0_r_5_reg_558 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter1_r_5_reg_558 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter2_r_5_reg_558 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter3_r_5_reg_558 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter4_r_5_reg_558 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter5_r_5_reg_558 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter6_r_5_reg_558 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_reg_pp0_iter7_r_5_reg_558 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln344_2_fu_757_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln344_fu_870_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal col_fu_148 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln344_fu_742_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_col_1 : STD_LOGIC_VECTOR (10 downto 0);
    signal bram_read_count_fu_152 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln406_fu_768_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_allocacmp_bram_read_count_load_1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_allocacmp_bram_read_count_load : STD_LOGIC_VECTOR (11 downto 0);
    signal imgblock_V_fu_156 : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_V_1_fu_160 : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_V_2_fu_164 : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_V_3_fu_168 : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_V_4_fu_172 : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_V_5_fu_176 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_fu_180 : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_V_6_fu_184 : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_V_7_fu_188 : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_V_8_fu_192 : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_V_9_fu_196 : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_V_10_fu_200 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln344_1_fu_732_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_984_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln40_fu_994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln260_fu_1000_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_47_fu_1012_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln40_1_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln260_3_fu_1028_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_48_fu_1040_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln40_2_fu_1050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln260_4_fu_1056_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln40_2_fu_1060_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln40_1_fu_1032_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln40_fu_1004_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op86_load_state1 : BOOLEAN;
    signal ap_enable_operation_86 : BOOLEAN;
    signal ap_enable_state1_pp0_iter0_stage0 : BOOLEAN;
    signal ap_predicate_op101_load_state2 : BOOLEAN;
    signal ap_enable_operation_101 : BOOLEAN;
    signal ap_enable_state2_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op126_store_state3 : BOOLEAN;
    signal ap_enable_operation_126 : BOOLEAN;
    signal ap_enable_state3_pp0_iter2_stage0 : BOOLEAN;
    signal ap_predicate_op134_store_state3 : BOOLEAN;
    signal ap_enable_operation_134 : BOOLEAN;
    signal ap_predicate_op87_load_state1 : BOOLEAN;
    signal ap_enable_operation_87 : BOOLEAN;
    signal ap_predicate_op102_load_state2 : BOOLEAN;
    signal ap_enable_operation_102 : BOOLEAN;
    signal ap_predicate_op124_store_state3 : BOOLEAN;
    signal ap_enable_operation_124 : BOOLEAN;
    signal ap_predicate_op132_store_state3 : BOOLEAN;
    signal ap_enable_operation_132 : BOOLEAN;
    signal ap_predicate_op88_load_state1 : BOOLEAN;
    signal ap_enable_operation_88 : BOOLEAN;
    signal ap_predicate_op103_load_state2 : BOOLEAN;
    signal ap_enable_operation_103 : BOOLEAN;
    signal ap_predicate_op122_store_state3 : BOOLEAN;
    signal ap_enable_operation_122 : BOOLEAN;
    signal ap_predicate_op130_store_state3 : BOOLEAN;
    signal ap_enable_operation_130 : BOOLEAN;
    signal ap_predicate_op89_load_state1 : BOOLEAN;
    signal ap_enable_operation_89 : BOOLEAN;
    signal ap_predicate_op104_load_state2 : BOOLEAN;
    signal ap_enable_operation_104 : BOOLEAN;
    signal ap_predicate_op128_store_state3 : BOOLEAN;
    signal ap_enable_operation_128 : BOOLEAN;
    signal ap_predicate_op136_store_state3 : BOOLEAN;
    signal ap_enable_operation_136 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_660 : BOOLEAN;
    signal ap_condition_662 : BOOLEAN;
    signal ap_condition_238 : BOOLEAN;
    signal ap_condition_702 : BOOLEAN;
    signal ap_condition_704 : BOOLEAN;
    signal ap_condition_242 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component ISPPipeline_accel_rb_kernel_ap_uint_10_5_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (9 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component ISPPipeline_accel_g_kernel_ap_uint_10_5_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (9 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component ISPPipeline_accel_rgb_bgr_kernel_ap_uint_10_5_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (9 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component ISPPipeline_accel_rgr_bgb_kernel_ap_uint_10_5_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (9 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component ISPPipeline_accel_mux_42_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        din3 : IN STD_LOGIC_VECTOR (9 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component ISPPipeline_accel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    grp_rb_kernel_ap_uint_10_5_s_fu_571 : component ISPPipeline_accel_rb_kernel_ap_uint_10_5_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        p_read => imgblock_V_fu_156,
        p_read1 => imgblock_V_3_fu_168,
        p_read2 => imgblock_V_1_fu_160,
        p_read3 => imgblock_V_4_fu_172,
        p_read4 => imgblock_V_8_fu_192,
        p_read5 => ap_phi_reg_pp0_iter2_imgblock_V_14_1_reg_487,
        p_read6 => imgblock_V_5_fu_176,
        p_read7 => imgblock_V_2_fu_164,
        p_read8 => ap_phi_reg_pp0_iter2_p_Val2_27_reg_471,
        ap_return => grp_rb_kernel_ap_uint_10_5_s_fu_571_ap_return,
        ap_ce => grp_rb_kernel_ap_uint_10_5_s_fu_571_ap_ce);

    grp_g_kernel_ap_uint_10_5_s_fu_586 : component ISPPipeline_accel_g_kernel_ap_uint_10_5_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        p_read => imgblock_V_fu_156,
        p_read1 => imgblock_V_6_fu_184,
        p_read2 => imgblock_V_4_fu_172,
        p_read3 => imgblock_V_7_fu_188,
        p_read4 => imgblock_V_8_fu_192,
        p_read5 => imgblock_V_9_fu_196,
        p_read6 => ap_phi_reg_pp0_iter2_imgblock_V_14_1_reg_487,
        p_read7 => imgblock_V_10_fu_200,
        p_read8 => ap_phi_reg_pp0_iter2_p_Val2_27_reg_471,
        ap_return => grp_g_kernel_ap_uint_10_5_s_fu_586_ap_return,
        ap_ce => grp_g_kernel_ap_uint_10_5_s_fu_586_ap_ce);

    grp_rgb_bgr_kernel_ap_uint_10_5_s_fu_601 : component ISPPipeline_accel_rgb_bgr_kernel_ap_uint_10_5_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        p_read => imgblock_V_fu_156,
        p_read1 => imgblock_V_3_fu_168,
        p_read2 => imgblock_V_6_fu_184,
        p_read3 => imgblock_V_1_fu_160,
        p_read4 => imgblock_V_4_fu_172,
        p_read5 => imgblock_V_8_fu_192,
        p_read6 => ap_phi_reg_pp0_iter2_imgblock_V_14_1_reg_487,
        p_read7 => imgblock_V_5_fu_176,
        p_read8 => imgblock_V_10_fu_200,
        p_read9 => imgblock_V_2_fu_164,
        p_read10 => ap_phi_reg_pp0_iter2_p_Val2_27_reg_471,
        ap_return => grp_rgb_bgr_kernel_ap_uint_10_5_s_fu_601_ap_return,
        ap_ce => grp_rgb_bgr_kernel_ap_uint_10_5_s_fu_601_ap_ce);

    grp_rgr_bgb_kernel_ap_uint_10_5_s_fu_618 : component ISPPipeline_accel_rgr_bgb_kernel_ap_uint_10_5_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        p_read => imgblock_V_fu_156,
        p_read1 => imgblock_V_3_fu_168,
        p_read2 => imgblock_V_1_fu_160,
        p_read3 => imgblock_V_4_fu_172,
        p_read4 => imgblock_V_7_fu_188,
        p_read5 => imgblock_V_8_fu_192,
        p_read6 => imgblock_V_9_fu_196,
        p_read7 => ap_phi_reg_pp0_iter2_imgblock_V_14_1_reg_487,
        p_read8 => imgblock_V_5_fu_176,
        p_read9 => imgblock_V_2_fu_164,
        p_read10 => ap_phi_reg_pp0_iter2_p_Val2_27_reg_471,
        ap_return => grp_rgr_bgb_kernel_ap_uint_10_5_s_fu_618_ap_return,
        ap_ce => grp_rgr_bgb_kernel_ap_uint_10_5_s_fu_618_ap_ce);

    mux_42_10_1_1_U140 : component ISPPipeline_accel_mux_42_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => linebuffer_V_q1,
        din1 => linebuffer_V_1_q1,
        din2 => linebuffer_V_2_q1,
        din3 => linebuffer_V_3_q1,
        din4 => line0_V_1,
        dout => packed_read1_V_fu_788_p6);

    mux_42_10_1_1_U141 : component ISPPipeline_accel_mux_42_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => linebuffer_V_q1,
        din1 => linebuffer_V_1_q1,
        din2 => linebuffer_V_2_q1,
        din3 => linebuffer_V_3_q1,
        din4 => line1_V,
        dout => packed_read2_V_fu_801_p6);

    mux_42_10_1_1_U142 : component ISPPipeline_accel_mux_42_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => linebuffer_V_q1,
        din1 => linebuffer_V_1_q1,
        din2 => linebuffer_V_2_q1,
        din3 => linebuffer_V_3_q1,
        din4 => line2_V,
        dout => packed_read3_V_fu_814_p6);

    mux_42_10_1_1_U143 : component ISPPipeline_accel_mux_42_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => linebuffer_V_q1,
        din1 => linebuffer_V_1_q1,
        din2 => linebuffer_V_2_q1,
        din3 => linebuffer_V_3_q1,
        din4 => line3_V,
        dout => packed_read4_V_fu_827_p6);

    flow_control_loop_pipe_sequential_init_U : component ISPPipeline_accel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage0)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_empty_104_reg_510_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_660)) then
                if (((icmp_ln344_fu_736_p2 = ap_const_lv1_0) and (icmp_ln373_fu_748_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_empty_104_reg_510 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_empty_104_reg_510 <= ap_phi_reg_pp0_iter0_empty_104_reg_510;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_empty_105_reg_521_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_660)) then
                if (((icmp_ln344_fu_736_p2 = ap_const_lv1_0) and (icmp_ln373_fu_748_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_empty_105_reg_521 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_empty_105_reg_521 <= ap_phi_reg_pp0_iter0_empty_105_reg_521;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_empty_reg_499_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_660)) then
                if (((icmp_ln344_fu_736_p2 = ap_const_lv1_0) and (icmp_ln373_fu_748_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_empty_reg_499 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_empty_reg_499 <= ap_phi_reg_pp0_iter0_empty_reg_499;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_imgblock_V_14_1_reg_487_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_660)) then
                if (((icmp_ln344_fu_736_p2 = ap_const_lv1_0) and (icmp_ln373_fu_748_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_imgblock_V_14_1_reg_487 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_imgblock_V_14_1_reg_487 <= ap_phi_reg_pp0_iter0_imgblock_V_14_1_reg_487;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_Val2_27_reg_471_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_660)) then
                if (((icmp_ln344_fu_736_p2 = ap_const_lv1_0) and (cmp162_read_read_fu_204_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_p_Val2_27_reg_471 <= ap_const_lv10_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_Val2_27_reg_471 <= ap_phi_reg_pp0_iter0_p_Val2_27_reg_471;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_empty_104_reg_510_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_662)) then
                if (((icmp_ln344_reg_1232 = ap_const_lv1_0) and (icmp_ln373_reg_1236 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_empty_104_reg_510 <= packed_read2_V_fu_801_p6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_empty_104_reg_510 <= ap_phi_reg_pp0_iter1_empty_104_reg_510;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_empty_105_reg_521_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_662)) then
                if (((icmp_ln344_reg_1232 = ap_const_lv1_0) and (icmp_ln373_reg_1236 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_empty_105_reg_521 <= packed_read1_V_fu_788_p6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_empty_105_reg_521 <= ap_phi_reg_pp0_iter1_empty_105_reg_521;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_empty_reg_499_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_662)) then
                if (((icmp_ln344_reg_1232 = ap_const_lv1_0) and (icmp_ln373_reg_1236 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_empty_reg_499 <= packed_read4_V_fu_827_p6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_empty_reg_499 <= ap_phi_reg_pp0_iter1_empty_reg_499;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_imgblock_V_14_1_reg_487_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_662)) then
                if (((icmp_ln344_reg_1232 = ap_const_lv1_0) and (icmp_ln373_reg_1236 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_imgblock_V_14_1_reg_487 <= packed_read3_V_fu_814_p6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_imgblock_V_14_1_reg_487 <= ap_phi_reg_pp0_iter1_imgblock_V_14_1_reg_487;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_p_Val2_27_reg_471_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_662)) then
                if (((cmp162 = ap_const_lv1_1) and (icmp_ln344_reg_1232 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_p_Val2_27_reg_471 <= gain_out_data240_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_p_Val2_27_reg_471 <= ap_phi_reg_pp0_iter1_p_Val2_27_reg_471;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter7_b_5_reg_532_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                if ((ap_const_boolean_1 = ap_condition_242)) then 
                    ap_phi_reg_pp0_iter7_b_5_reg_532 <= zext_ln124_fu_981_p1;
                elsif ((ap_const_boolean_1 = ap_condition_704)) then 
                    ap_phi_reg_pp0_iter7_b_5_reg_532 <= reg_647;
                elsif ((ap_const_boolean_1 = ap_condition_702)) then 
                    ap_phi_reg_pp0_iter7_b_5_reg_532 <= reg_641;
                elsif ((ap_const_boolean_1 = ap_condition_238)) then 
                    ap_phi_reg_pp0_iter7_b_5_reg_532 <= grp_rb_kernel_ap_uint_10_5_s_fu_571_ap_return;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter7_b_5_reg_532 <= ap_phi_reg_pp0_iter6_b_5_reg_532;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter7_g_4_reg_545_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (trunc_ln135_reg_1260_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter5_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (trunc_ln135_reg_1260_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter5_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_1)))) then 
                ap_phi_reg_pp0_iter7_g_4_reg_545 <= zext_ln124_fu_981_p1;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (trunc_ln135_reg_1260_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter5_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (trunc_ln135_reg_1260_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter5_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_0)))) then 
                ap_phi_reg_pp0_iter7_g_4_reg_545 <= reg_635;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter7_g_4_reg_545 <= ap_phi_reg_pp0_iter6_g_4_reg_545;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter7_r_5_reg_558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                if ((ap_const_boolean_1 = ap_condition_242)) then 
                    ap_phi_reg_pp0_iter7_r_5_reg_558 <= grp_rb_kernel_ap_uint_10_5_s_fu_571_ap_return;
                elsif ((ap_const_boolean_1 = ap_condition_704)) then 
                    ap_phi_reg_pp0_iter7_r_5_reg_558 <= reg_641;
                elsif ((ap_const_boolean_1 = ap_condition_702)) then 
                    ap_phi_reg_pp0_iter7_r_5_reg_558 <= reg_647;
                elsif ((ap_const_boolean_1 = ap_condition_238)) then 
                    ap_phi_reg_pp0_iter7_r_5_reg_558 <= zext_ln124_fu_981_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter7_r_5_reg_558 <= ap_phi_reg_pp0_iter6_r_5_reg_558;
                end if;
            end if; 
        end if;
    end process;

    bram_read_count_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln344_fu_736_p2 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1))) then 
                    bram_read_count_fu_152 <= add_ln406_fu_768_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    bram_read_count_fu_152 <= ap_const_lv12_2;
                end if;
            end if; 
        end if;
    end process;

    col_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln344_fu_736_p2 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1))) then 
                    col_fu_148 <= add_ln344_fu_742_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    col_fu_148 <= ap_const_lv11_0;
                end if;
            end if; 
        end if;
    end process;

    imgblock_V_10_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    imgblock_V_10_fu_200 <= p_Val2_18;
                elsif (((icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    imgblock_V_10_fu_200 <= imgblock_V_2_fu_164;
                end if;
            end if; 
        end if;
    end process;

    imgblock_V_1_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    imgblock_V_1_fu_160 <= p_Val2_20;
                elsif (((icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    imgblock_V_1_fu_160 <= ap_phi_reg_pp0_iter2_empty_104_reg_510;
                end if;
            end if; 
        end if;
    end process;

    imgblock_V_2_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    imgblock_V_2_fu_164 <= p_Val2_22;
                elsif (((icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    imgblock_V_2_fu_164 <= ap_phi_reg_pp0_iter2_empty_reg_499;
                end if;
            end if; 
        end if;
    end process;

    imgblock_V_3_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    imgblock_V_3_fu_168 <= imgblock_V_7_1_reload;
                elsif (((icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    imgblock_V_3_fu_168 <= imgblock_V_6_fu_184;
                end if;
            end if; 
        end if;
    end process;

    imgblock_V_4_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    imgblock_V_4_fu_172 <= imgblock_V_11_1_reload;
                elsif (((icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    imgblock_V_4_fu_172 <= imgblock_V_7_fu_188;
                end if;
            end if; 
        end if;
    end process;

    imgblock_V_5_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    imgblock_V_5_fu_176 <= imgblock_V_17_1_reload;
                elsif (((icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    imgblock_V_5_fu_176 <= imgblock_V_10_fu_200;
                end if;
            end if; 
        end if;
    end process;

    imgblock_V_6_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    imgblock_V_6_fu_184 <= p_Val2_16;
                elsif (((icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    imgblock_V_6_fu_184 <= imgblock_V_1_fu_160;
                end if;
            end if; 
        end if;
    end process;

    imgblock_V_7_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    imgblock_V_7_fu_188 <= imgblock_V_12_1_reload;
                elsif (((icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    imgblock_V_7_fu_188 <= imgblock_V_8_fu_192;
                end if;
            end if; 
        end if;
    end process;

    imgblock_V_8_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    imgblock_V_8_fu_192 <= p_Val2_17;
                elsif (((icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    imgblock_V_8_fu_192 <= imgblock_V_9_fu_196;
                end if;
            end if; 
        end if;
    end process;

    imgblock_V_9_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    imgblock_V_9_fu_196 <= p_Val2_21;
                elsif (((icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    imgblock_V_9_fu_196 <= ap_phi_reg_pp0_iter2_imgblock_V_14_1_reg_487;
                end if;
            end if; 
        end if;
    end process;

    imgblock_V_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    imgblock_V_fu_156 <= p_Val2_s;
                elsif (((icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    imgblock_V_fu_156 <= ret_fu_180;
                end if;
            end if; 
        end if;
    end process;

    ret_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ret_fu_180 <= p_Val2_19;
                elsif (((icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    ret_fu_180 <= ap_phi_reg_pp0_iter2_empty_105_reg_521;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                col_1_reg_1227 <= ap_sig_allocacmp_col_1;
                col_1_reg_1227_pp0_iter1_reg <= col_1_reg_1227;
                icmp_ln344_reg_1232 <= icmp_ln344_fu_736_p2;
                icmp_ln344_reg_1232_pp0_iter1_reg <= icmp_ln344_reg_1232;
                icmp_ln373_reg_1236_pp0_iter1_reg <= icmp_ln373_reg_1236;
                trunc_ln135_reg_1260_pp0_iter1_reg <= trunc_ln135_reg_1260;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                icmp_ln344_reg_1232_pp0_iter2_reg <= icmp_ln344_reg_1232_pp0_iter1_reg;
                icmp_ln344_reg_1232_pp0_iter3_reg <= icmp_ln344_reg_1232_pp0_iter2_reg;
                icmp_ln344_reg_1232_pp0_iter4_reg <= icmp_ln344_reg_1232_pp0_iter3_reg;
                icmp_ln344_reg_1232_pp0_iter5_reg <= icmp_ln344_reg_1232_pp0_iter4_reg;
                imgblock_V_12_reg_1295_pp0_iter3_reg <= imgblock_V_12_reg_1295;
                imgblock_V_12_reg_1295_pp0_iter4_reg <= imgblock_V_12_reg_1295_pp0_iter3_reg;
                imgblock_V_12_reg_1295_pp0_iter5_reg <= imgblock_V_12_reg_1295_pp0_iter4_reg;
                r_3_reg_1302 <= imgblock_V_8_fu_192;
                r_3_reg_1302_pp0_iter3_reg <= r_3_reg_1302;
                r_3_reg_1302_pp0_iter4_reg <= r_3_reg_1302_pp0_iter3_reg;
                r_3_reg_1302_pp0_iter5_reg <= r_3_reg_1302_pp0_iter4_reg;
                trunc_ln135_reg_1260_pp0_iter2_reg <= trunc_ln135_reg_1260_pp0_iter1_reg;
                trunc_ln135_reg_1260_pp0_iter3_reg <= trunc_ln135_reg_1260_pp0_iter2_reg;
                trunc_ln135_reg_1260_pp0_iter4_reg <= trunc_ln135_reg_1260_pp0_iter3_reg;
                trunc_ln135_reg_1260_pp0_iter5_reg <= trunc_ln135_reg_1260_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_b_5_reg_532 <= ap_phi_reg_pp0_iter0_b_5_reg_532;
                ap_phi_reg_pp0_iter1_g_4_reg_545 <= ap_phi_reg_pp0_iter0_g_4_reg_545;
                ap_phi_reg_pp0_iter1_r_5_reg_558 <= ap_phi_reg_pp0_iter0_r_5_reg_558;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_b_5_reg_532 <= ap_phi_reg_pp0_iter1_b_5_reg_532;
                ap_phi_reg_pp0_iter2_g_4_reg_545 <= ap_phi_reg_pp0_iter1_g_4_reg_545;
                ap_phi_reg_pp0_iter2_r_5_reg_558 <= ap_phi_reg_pp0_iter1_r_5_reg_558;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_b_5_reg_532 <= ap_phi_reg_pp0_iter2_b_5_reg_532;
                ap_phi_reg_pp0_iter3_g_4_reg_545 <= ap_phi_reg_pp0_iter2_g_4_reg_545;
                ap_phi_reg_pp0_iter3_r_5_reg_558 <= ap_phi_reg_pp0_iter2_r_5_reg_558;
                imgblock_V_12_reg_1295 <= imgblock_V_7_fu_188;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter4_b_5_reg_532 <= ap_phi_reg_pp0_iter3_b_5_reg_532;
                ap_phi_reg_pp0_iter4_g_4_reg_545 <= ap_phi_reg_pp0_iter3_g_4_reg_545;
                ap_phi_reg_pp0_iter4_r_5_reg_558 <= ap_phi_reg_pp0_iter3_r_5_reg_558;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter5_b_5_reg_532 <= ap_phi_reg_pp0_iter4_b_5_reg_532;
                ap_phi_reg_pp0_iter5_g_4_reg_545 <= ap_phi_reg_pp0_iter4_g_4_reg_545;
                ap_phi_reg_pp0_iter5_r_5_reg_558 <= ap_phi_reg_pp0_iter4_r_5_reg_558;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter6_b_5_reg_532 <= ap_phi_reg_pp0_iter5_b_5_reg_532;
                ap_phi_reg_pp0_iter6_g_4_reg_545 <= ap_phi_reg_pp0_iter5_g_4_reg_545;
                ap_phi_reg_pp0_iter6_r_5_reg_558 <= ap_phi_reg_pp0_iter5_r_5_reg_558;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln344_fu_736_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln373_reg_1236 <= icmp_ln373_fu_748_p2;
                trunc_ln135_reg_1260 <= trunc_ln135_fu_774_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (trunc_ln135_reg_1260_pp0_iter4_reg = ap_const_lv1_1) and (trunc_ln = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (trunc_ln135_reg_1260_pp0_iter4_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter4_reg = ap_const_lv1_0)))) then
                reg_635 <= grp_g_kernel_ap_uint_10_5_s_fu_586_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (trunc_ln135_reg_1260_pp0_iter4_reg = ap_const_lv1_1) and (trunc_ln = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (trunc_ln135_reg_1260_pp0_iter4_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter4_reg = ap_const_lv1_0)))) then
                reg_641 <= grp_rgb_bgr_kernel_ap_uint_10_5_s_fu_601_ap_return;
                reg_647 <= grp_rgr_bgb_kernel_ap_uint_10_5_s_fu_618_ap_return;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln344_fu_742_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_col_1) + unsigned(ap_const_lv11_1));
    add_ln406_fu_768_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_bram_read_count_load) + unsigned(ap_const_lv12_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, gain_out_data240_empty_n, ap_predicate_op99_read_state2, demosaic_out_data241_full_n)
    begin
                ap_block_pp0_stage0_01001 <= (((demosaic_out_data241_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_predicate_op99_read_state2 = ap_const_boolean_1) and (gain_out_data240_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, gain_out_data240_empty_n, ap_predicate_op99_read_state2, demosaic_out_data241_full_n)
    begin
                ap_block_pp0_stage0_11001 <= (((demosaic_out_data241_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_predicate_op99_read_state2 = ap_const_boolean_1) and (gain_out_data240_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp148_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, gain_out_data240_empty_n, ap_predicate_op99_read_state2, demosaic_out_data241_full_n)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp148 <= (((demosaic_out_data241_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_predicate_op99_read_state2 = ap_const_boolean_1) and (gain_out_data240_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp149_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, gain_out_data240_empty_n, ap_predicate_op99_read_state2, demosaic_out_data241_full_n)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp149 <= (((demosaic_out_data241_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_predicate_op99_read_state2 = ap_const_boolean_1) and (gain_out_data240_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp150_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, gain_out_data240_empty_n, ap_predicate_op99_read_state2, demosaic_out_data241_full_n)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp150 <= (((demosaic_out_data241_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_predicate_op99_read_state2 = ap_const_boolean_1) and (gain_out_data240_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp151_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, gain_out_data240_empty_n, ap_predicate_op99_read_state2, demosaic_out_data241_full_n)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp151 <= (((demosaic_out_data241_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_predicate_op99_read_state2 = ap_const_boolean_1) and (gain_out_data240_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, gain_out_data240_empty_n, ap_predicate_op99_read_state2, demosaic_out_data241_full_n)
    begin
                ap_block_pp0_stage0_subdone <= (((demosaic_out_data241_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_predicate_op99_read_state2 = ap_const_boolean_1) and (gain_out_data240_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(gain_out_data240_empty_n, ap_predicate_op99_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op99_read_state2 = ap_const_boolean_1) and (gain_out_data240_empty_n = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage0_iter1_ignore_call0_assign_proc : process(gain_out_data240_empty_n, ap_predicate_op99_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1_ignore_call0 <= ((ap_predicate_op99_read_state2 = ap_const_boolean_1) and (gain_out_data240_empty_n = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage0_iter1_ignore_call1_assign_proc : process(gain_out_data240_empty_n, ap_predicate_op99_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1_ignore_call1 <= ((ap_predicate_op99_read_state2 = ap_const_boolean_1) and (gain_out_data240_empty_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter7_assign_proc : process(demosaic_out_data241_full_n)
    begin
                ap_block_state8_pp0_stage0_iter7 <= (demosaic_out_data241_full_n = ap_const_logic_0);
    end process;


    ap_block_state8_pp0_stage0_iter7_ignore_call0_assign_proc : process(demosaic_out_data241_full_n)
    begin
                ap_block_state8_pp0_stage0_iter7_ignore_call0 <= (demosaic_out_data241_full_n = ap_const_logic_0);
    end process;


    ap_block_state8_pp0_stage0_iter7_ignore_call1_assign_proc : process(demosaic_out_data241_full_n)
    begin
                ap_block_state8_pp0_stage0_iter7_ignore_call1 <= (demosaic_out_data241_full_n = ap_const_logic_0);
    end process;


    ap_condition_238_assign_proc : process(trunc_ln, icmp_ln344_reg_1232_pp0_iter5_reg, trunc_ln135_reg_1260_pp0_iter5_reg)
    begin
                ap_condition_238 <= ((trunc_ln135_reg_1260_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter5_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_0));
    end process;


    ap_condition_242_assign_proc : process(trunc_ln, icmp_ln344_reg_1232_pp0_iter5_reg, trunc_ln135_reg_1260_pp0_iter5_reg)
    begin
                ap_condition_242 <= ((trunc_ln135_reg_1260_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter5_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_1));
    end process;


    ap_condition_660_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
                ap_condition_660 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_662_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_662 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_702_assign_proc : process(trunc_ln, icmp_ln344_reg_1232_pp0_iter5_reg, trunc_ln135_reg_1260_pp0_iter5_reg)
    begin
                ap_condition_702 <= ((trunc_ln135_reg_1260_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter5_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_0));
    end process;


    ap_condition_704_assign_proc : process(trunc_ln, icmp_ln344_reg_1232_pp0_iter5_reg, trunc_ln135_reg_1260_pp0_iter5_reg)
    begin
                ap_condition_704 <= ((trunc_ln135_reg_1260_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter5_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln344_fu_736_p2, ap_start_int)
    begin
        if (((icmp_ln344_fu_736_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter2_stage0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, icmp_ln344_reg_1232_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter6_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_101_assign_proc : process(ap_predicate_op101_load_state2)
    begin
                ap_enable_operation_101 <= (ap_predicate_op101_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_102_assign_proc : process(ap_predicate_op102_load_state2)
    begin
                ap_enable_operation_102 <= (ap_predicate_op102_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_103_assign_proc : process(ap_predicate_op103_load_state2)
    begin
                ap_enable_operation_103 <= (ap_predicate_op103_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_104_assign_proc : process(ap_predicate_op104_load_state2)
    begin
                ap_enable_operation_104 <= (ap_predicate_op104_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_122_assign_proc : process(ap_predicate_op122_store_state3)
    begin
                ap_enable_operation_122 <= (ap_predicate_op122_store_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_124_assign_proc : process(ap_predicate_op124_store_state3)
    begin
                ap_enable_operation_124 <= (ap_predicate_op124_store_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_126_assign_proc : process(ap_predicate_op126_store_state3)
    begin
                ap_enable_operation_126 <= (ap_predicate_op126_store_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_128_assign_proc : process(ap_predicate_op128_store_state3)
    begin
                ap_enable_operation_128 <= (ap_predicate_op128_store_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_130_assign_proc : process(ap_predicate_op130_store_state3)
    begin
                ap_enable_operation_130 <= (ap_predicate_op130_store_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_132_assign_proc : process(ap_predicate_op132_store_state3)
    begin
                ap_enable_operation_132 <= (ap_predicate_op132_store_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_134_assign_proc : process(ap_predicate_op134_store_state3)
    begin
                ap_enable_operation_134 <= (ap_predicate_op134_store_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_136_assign_proc : process(ap_predicate_op136_store_state3)
    begin
                ap_enable_operation_136 <= (ap_predicate_op136_store_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_86_assign_proc : process(ap_predicate_op86_load_state1)
    begin
                ap_enable_operation_86 <= (ap_predicate_op86_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_87_assign_proc : process(ap_predicate_op87_load_state1)
    begin
                ap_enable_operation_87 <= (ap_predicate_op87_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_88_assign_proc : process(ap_predicate_op88_load_state1)
    begin
                ap_enable_operation_88 <= (ap_predicate_op88_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_89_assign_proc : process(ap_predicate_op89_load_state1)
    begin
                ap_enable_operation_89 <= (ap_predicate_op89_load_state1 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_state1_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_start_int)
    begin
                ap_enable_state1_pp0_iter0_stage0 <= ((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state2_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state2_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state3_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state3_pp0_iter2_stage0 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_phi_reg_pp0_iter0_b_5_reg_532 <= "XXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_104_reg_510 <= "XXXXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_105_reg_521 <= "XXXXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_reg_499 <= "XXXXXXXXXX";
    ap_phi_reg_pp0_iter0_g_4_reg_545 <= "XXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_imgblock_V_14_1_reg_487 <= "XXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_Val2_27_reg_471 <= "XXXXXXXXXX";
    ap_phi_reg_pp0_iter0_r_5_reg_558 <= "XXXXXXXXXXXXX";

    ap_predicate_op101_load_state2_assign_proc : process(icmp_ln344_reg_1232, icmp_ln373_reg_1236)
    begin
                ap_predicate_op101_load_state2 <= ((icmp_ln344_reg_1232 = ap_const_lv1_0) and (icmp_ln373_reg_1236 = ap_const_lv1_1));
    end process;


    ap_predicate_op102_load_state2_assign_proc : process(icmp_ln344_reg_1232, icmp_ln373_reg_1236)
    begin
                ap_predicate_op102_load_state2 <= ((icmp_ln344_reg_1232 = ap_const_lv1_0) and (icmp_ln373_reg_1236 = ap_const_lv1_1));
    end process;


    ap_predicate_op103_load_state2_assign_proc : process(icmp_ln344_reg_1232, icmp_ln373_reg_1236)
    begin
                ap_predicate_op103_load_state2 <= ((icmp_ln344_reg_1232 = ap_const_lv1_0) and (icmp_ln373_reg_1236 = ap_const_lv1_1));
    end process;


    ap_predicate_op104_load_state2_assign_proc : process(icmp_ln344_reg_1232, icmp_ln373_reg_1236)
    begin
                ap_predicate_op104_load_state2 <= ((icmp_ln344_reg_1232 = ap_const_lv1_0) and (icmp_ln373_reg_1236 = ap_const_lv1_1));
    end process;


    ap_predicate_op122_store_state3_assign_proc : process(lineStore_1_cast, icmp_ln344_reg_1232_pp0_iter1_reg, icmp_ln373_reg_1236_pp0_iter1_reg)
    begin
                ap_predicate_op122_store_state3 <= ((icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_2));
    end process;


    ap_predicate_op124_store_state3_assign_proc : process(lineStore_1_cast, icmp_ln344_reg_1232_pp0_iter1_reg, icmp_ln373_reg_1236_pp0_iter1_reg)
    begin
                ap_predicate_op124_store_state3 <= ((icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_1));
    end process;


    ap_predicate_op126_store_state3_assign_proc : process(lineStore_1_cast, icmp_ln344_reg_1232_pp0_iter1_reg, icmp_ln373_reg_1236_pp0_iter1_reg)
    begin
                ap_predicate_op126_store_state3 <= ((icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_0));
    end process;


    ap_predicate_op128_store_state3_assign_proc : process(lineStore_1_cast, icmp_ln344_reg_1232_pp0_iter1_reg, icmp_ln373_reg_1236_pp0_iter1_reg)
    begin
                ap_predicate_op128_store_state3 <= ((icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_3));
    end process;


    ap_predicate_op130_store_state3_assign_proc : process(lineStore_1_cast, icmp_ln344_reg_1232_pp0_iter1_reg, icmp_ln373_reg_1236_pp0_iter1_reg)
    begin
                ap_predicate_op130_store_state3 <= ((icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_2));
    end process;


    ap_predicate_op132_store_state3_assign_proc : process(lineStore_1_cast, icmp_ln344_reg_1232_pp0_iter1_reg, icmp_ln373_reg_1236_pp0_iter1_reg)
    begin
                ap_predicate_op132_store_state3 <= ((icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_1));
    end process;


    ap_predicate_op134_store_state3_assign_proc : process(lineStore_1_cast, icmp_ln344_reg_1232_pp0_iter1_reg, icmp_ln373_reg_1236_pp0_iter1_reg)
    begin
                ap_predicate_op134_store_state3 <= ((icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_0));
    end process;


    ap_predicate_op136_store_state3_assign_proc : process(lineStore_1_cast, icmp_ln344_reg_1232_pp0_iter1_reg, icmp_ln373_reg_1236_pp0_iter1_reg)
    begin
                ap_predicate_op136_store_state3 <= ((icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_3));
    end process;


    ap_predicate_op148_call_state3_assign_proc : process(trunc_ln, icmp_ln344_reg_1232_pp0_iter1_reg, trunc_ln135_reg_1260_pp0_iter1_reg)
    begin
                ap_predicate_op148_call_state3 <= ((trunc_ln135_reg_1260_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_0));
    end process;


    ap_predicate_op149_call_state3_assign_proc : process(trunc_ln, icmp_ln344_reg_1232_pp0_iter1_reg, trunc_ln135_reg_1260_pp0_iter1_reg)
    begin
                ap_predicate_op149_call_state3 <= ((trunc_ln135_reg_1260_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_0));
    end process;


    ap_predicate_op150_call_state3_assign_proc : process(trunc_ln, icmp_ln344_reg_1232_pp0_iter1_reg, trunc_ln135_reg_1260_pp0_iter1_reg)
    begin
                ap_predicate_op150_call_state3 <= ((trunc_ln135_reg_1260_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_0));
    end process;


    ap_predicate_op151_call_state3_assign_proc : process(trunc_ln, icmp_ln344_reg_1232_pp0_iter1_reg, trunc_ln135_reg_1260_pp0_iter1_reg)
    begin
                ap_predicate_op151_call_state3 <= ((trunc_ln135_reg_1260_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_0));
    end process;


    ap_predicate_op152_call_state3_assign_proc : process(trunc_ln, icmp_ln344_reg_1232_pp0_iter1_reg, trunc_ln135_reg_1260_pp0_iter1_reg)
    begin
                ap_predicate_op152_call_state3 <= ((trunc_ln135_reg_1260_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_1));
    end process;


    ap_predicate_op153_call_state3_assign_proc : process(trunc_ln, icmp_ln344_reg_1232_pp0_iter1_reg, trunc_ln135_reg_1260_pp0_iter1_reg)
    begin
                ap_predicate_op153_call_state3 <= ((trunc_ln135_reg_1260_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_1));
    end process;


    ap_predicate_op154_call_state3_assign_proc : process(trunc_ln, icmp_ln344_reg_1232_pp0_iter1_reg, trunc_ln135_reg_1260_pp0_iter1_reg)
    begin
                ap_predicate_op154_call_state3 <= ((trunc_ln135_reg_1260_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_1));
    end process;


    ap_predicate_op155_call_state3_assign_proc : process(trunc_ln, icmp_ln344_reg_1232_pp0_iter1_reg, trunc_ln135_reg_1260_pp0_iter1_reg)
    begin
                ap_predicate_op155_call_state3 <= ((trunc_ln135_reg_1260_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (trunc_ln = ap_const_lv1_1));
    end process;


    ap_predicate_op86_load_state1_assign_proc : process(icmp_ln344_fu_736_p2, icmp_ln373_fu_748_p2)
    begin
                ap_predicate_op86_load_state1 <= ((icmp_ln344_fu_736_p2 = ap_const_lv1_0) and (icmp_ln373_fu_748_p2 = ap_const_lv1_1));
    end process;


    ap_predicate_op87_load_state1_assign_proc : process(icmp_ln344_fu_736_p2, icmp_ln373_fu_748_p2)
    begin
                ap_predicate_op87_load_state1 <= ((icmp_ln344_fu_736_p2 = ap_const_lv1_0) and (icmp_ln373_fu_748_p2 = ap_const_lv1_1));
    end process;


    ap_predicate_op88_load_state1_assign_proc : process(icmp_ln344_fu_736_p2, icmp_ln373_fu_748_p2)
    begin
                ap_predicate_op88_load_state1 <= ((icmp_ln344_fu_736_p2 = ap_const_lv1_0) and (icmp_ln373_fu_748_p2 = ap_const_lv1_1));
    end process;


    ap_predicate_op89_load_state1_assign_proc : process(icmp_ln344_fu_736_p2, icmp_ln373_fu_748_p2)
    begin
                ap_predicate_op89_load_state1 <= ((icmp_ln344_fu_736_p2 = ap_const_lv1_0) and (icmp_ln373_fu_748_p2 = ap_const_lv1_1));
    end process;


    ap_predicate_op99_read_state2_assign_proc : process(icmp_ln344_reg_1232, cmp162)
    begin
                ap_predicate_op99_read_state2 <= ((cmp162 = ap_const_lv1_1) and (icmp_ln344_reg_1232 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_bram_read_count_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, bram_read_count_fu_152)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_bram_read_count_load <= ap_const_lv12_2;
        else 
            ap_sig_allocacmp_bram_read_count_load <= bram_read_count_fu_152;
        end if; 
    end process;


    ap_sig_allocacmp_bram_read_count_load_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, bram_read_count_fu_152)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_bram_read_count_load_1 <= ap_const_lv12_2;
        else 
            ap_sig_allocacmp_bram_read_count_load_1 <= bram_read_count_fu_152;
        end if; 
    end process;


    ap_sig_allocacmp_col_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, col_fu_148, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_col_1 <= ap_const_lv11_0;
        else 
            ap_sig_allocacmp_col_1 <= col_fu_148;
        end if; 
    end process;

    cmp162_read_read_fu_204_p2 <= cmp162;

    demosaic_out_data241_blk_n_assign_proc : process(ap_enable_reg_pp0_iter7, demosaic_out_data241_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            demosaic_out_data241_blk_n <= demosaic_out_data241_full_n;
        else 
            demosaic_out_data241_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    demosaic_out_data241_din <= ((select_ln40_2_fu_1060_p3 & select_ln40_1_fu_1032_p3) & select_ln40_fu_1004_p3);

    demosaic_out_data241_write_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            demosaic_out_data241_write <= ap_const_logic_1;
        else 
            demosaic_out_data241_write <= ap_const_logic_0;
        end if; 
    end process;


    gain_out_data240_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, gain_out_data240_empty_n, ap_predicate_op99_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op99_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gain_out_data240_blk_n <= gain_out_data240_empty_n;
        else 
            gain_out_data240_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gain_out_data240_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op99_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op99_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gain_out_data240_read <= ap_const_logic_1;
        else 
            gain_out_data240_read <= ap_const_logic_0;
        end if; 
    end process;


    grp_g_kernel_ap_uint_10_5_s_fu_586_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp149)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp149) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_g_kernel_ap_uint_10_5_s_fu_586_ap_ce <= ap_const_logic_1;
        else 
            grp_g_kernel_ap_uint_10_5_s_fu_586_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_rb_kernel_ap_uint_10_5_s_fu_571_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp148)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp148) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_rb_kernel_ap_uint_10_5_s_fu_571_ap_ce <= ap_const_logic_1;
        else 
            grp_rb_kernel_ap_uint_10_5_s_fu_571_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_rgb_bgr_kernel_ap_uint_10_5_s_fu_601_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp150)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp150) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_rgb_bgr_kernel_ap_uint_10_5_s_fu_601_ap_ce <= ap_const_logic_1;
        else 
            grp_rgb_bgr_kernel_ap_uint_10_5_s_fu_601_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_rgr_bgb_kernel_ap_uint_10_5_s_fu_618_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp151)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp151) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_rgr_bgb_kernel_ap_uint_10_5_s_fu_618_ap_ce <= ap_const_logic_1;
        else 
            grp_rgr_bgb_kernel_ap_uint_10_5_s_fu_618_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln344_fu_736_p2 <= "1" when (ap_sig_allocacmp_col_1 = p_read1) else "0";
    icmp_ln373_fu_748_p2 <= "1" when (signed(zext_ln344_1_fu_732_p1) < signed(sub219)) else "0";
    icmp_ln40_1_fu_1022_p2 <= "0" when (tmp_47_fu_1012_p4 = ap_const_lv3_0) else "1";
    icmp_ln40_2_fu_1050_p2 <= "0" when (tmp_48_fu_1040_p4 = ap_const_lv3_0) else "1";
    icmp_ln40_fu_994_p2 <= "0" when (tmp_fu_984_p4 = ap_const_lv3_0) else "1";
    imgblock_V_12_out <= imgblock_V_5_fu_176;

    imgblock_V_12_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln344_reg_1232_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln344_reg_1232_pp0_iter5_reg = ap_const_lv1_1))) then 
            imgblock_V_12_out_ap_vld <= ap_const_logic_1;
        else 
            imgblock_V_12_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    imgblock_V_5_out <= imgblock_V_3_fu_168;

    imgblock_V_5_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln344_reg_1232_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln344_reg_1232_pp0_iter5_reg = ap_const_lv1_1))) then 
            imgblock_V_5_out_ap_vld <= ap_const_logic_1;
        else 
            imgblock_V_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    imgblock_V_8_out <= imgblock_V_4_fu_172;

    imgblock_V_8_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln344_reg_1232_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln344_reg_1232_pp0_iter5_reg = ap_const_lv1_1))) then 
            imgblock_V_8_out_ap_vld <= ap_const_logic_1;
        else 
            imgblock_V_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    imgblock_V_9_out <= imgblock_V_12_reg_1295_pp0_iter5_reg;

    imgblock_V_9_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln344_reg_1232_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln344_reg_1232_pp0_iter5_reg = ap_const_lv1_1))) then 
            imgblock_V_9_out_ap_vld <= ap_const_logic_1;
        else 
            imgblock_V_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    linebuffer_V_1_address0 <= zext_ln344_fu_870_p1(11 - 1 downto 0);
    linebuffer_V_1_address1 <= zext_ln344_2_fu_757_p1(11 - 1 downto 0);

    linebuffer_V_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, lineStore_1_cast, ap_block_pp0_stage0_11001, icmp_ln344_reg_1232_pp0_iter1_reg, icmp_ln373_reg_1236_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            linebuffer_V_1_ce0 <= ap_const_logic_1;
        else 
            linebuffer_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuffer_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            linebuffer_V_1_ce1 <= ap_const_logic_1;
        else 
            linebuffer_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuffer_V_1_d0 <= ap_phi_reg_pp0_iter2_p_Val2_27_reg_471;

    linebuffer_V_1_we0_assign_proc : process(ap_enable_reg_pp0_iter2, lineStore_1_cast, ap_block_pp0_stage0_11001, icmp_ln344_reg_1232_pp0_iter1_reg, icmp_ln373_reg_1236_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            linebuffer_V_1_we0 <= ap_const_logic_1;
        else 
            linebuffer_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    linebuffer_V_2_address0 <= zext_ln344_fu_870_p1(11 - 1 downto 0);
    linebuffer_V_2_address1 <= zext_ln344_2_fu_757_p1(11 - 1 downto 0);

    linebuffer_V_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, lineStore_1_cast, ap_block_pp0_stage0_11001, icmp_ln344_reg_1232_pp0_iter1_reg, icmp_ln373_reg_1236_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            linebuffer_V_2_ce0 <= ap_const_logic_1;
        else 
            linebuffer_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuffer_V_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            linebuffer_V_2_ce1 <= ap_const_logic_1;
        else 
            linebuffer_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuffer_V_2_d0 <= ap_phi_reg_pp0_iter2_p_Val2_27_reg_471;

    linebuffer_V_2_we0_assign_proc : process(ap_enable_reg_pp0_iter2, lineStore_1_cast, ap_block_pp0_stage0_11001, icmp_ln344_reg_1232_pp0_iter1_reg, icmp_ln373_reg_1236_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            linebuffer_V_2_we0 <= ap_const_logic_1;
        else 
            linebuffer_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    linebuffer_V_3_address0 <= zext_ln344_fu_870_p1(11 - 1 downto 0);
    linebuffer_V_3_address1 <= zext_ln344_2_fu_757_p1(11 - 1 downto 0);

    linebuffer_V_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, lineStore_1_cast, ap_block_pp0_stage0_11001, icmp_ln344_reg_1232_pp0_iter1_reg, icmp_ln373_reg_1236_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            linebuffer_V_3_ce0 <= ap_const_logic_1;
        else 
            linebuffer_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuffer_V_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            linebuffer_V_3_ce1 <= ap_const_logic_1;
        else 
            linebuffer_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuffer_V_3_d0 <= ap_phi_reg_pp0_iter2_p_Val2_27_reg_471;

    linebuffer_V_3_we0_assign_proc : process(ap_enable_reg_pp0_iter2, lineStore_1_cast, ap_block_pp0_stage0_11001, icmp_ln344_reg_1232_pp0_iter1_reg, icmp_ln373_reg_1236_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            linebuffer_V_3_we0 <= ap_const_logic_1;
        else 
            linebuffer_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    linebuffer_V_address0 <= zext_ln344_fu_870_p1(11 - 1 downto 0);
    linebuffer_V_address1 <= zext_ln344_2_fu_757_p1(11 - 1 downto 0);

    linebuffer_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, lineStore_1_cast, ap_block_pp0_stage0_11001, icmp_ln344_reg_1232_pp0_iter1_reg, icmp_ln373_reg_1236_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            linebuffer_V_ce0 <= ap_const_logic_1;
        else 
            linebuffer_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuffer_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            linebuffer_V_ce1 <= ap_const_logic_1;
        else 
            linebuffer_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuffer_V_d0 <= ap_phi_reg_pp0_iter2_p_Val2_27_reg_471;

    linebuffer_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, lineStore_1_cast, ap_block_pp0_stage0_11001, icmp_ln344_reg_1232_pp0_iter1_reg, icmp_ln373_reg_1236_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln373_reg_1236_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln344_reg_1232_pp0_iter1_reg = ap_const_lv1_0) and (lineStore_1_cast = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            linebuffer_V_we0 <= ap_const_logic_1;
        else 
            linebuffer_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln40_1_fu_1032_p3 <= 
        ap_const_lv10_3FF when (icmp_ln40_1_fu_1022_p2(0) = '1') else 
        trunc_ln260_3_fu_1028_p1;
    select_ln40_2_fu_1060_p3 <= 
        ap_const_lv10_3FF when (icmp_ln40_2_fu_1050_p2(0) = '1') else 
        trunc_ln260_4_fu_1056_p1;
    select_ln40_fu_1004_p3 <= 
        ap_const_lv10_3FF when (icmp_ln40_fu_994_p2(0) = '1') else 
        trunc_ln260_fu_1000_p1;
    tmp_47_fu_1012_p4 <= ap_phi_reg_pp0_iter7_g_4_reg_545(12 downto 10);
    tmp_48_fu_1040_p4 <= ap_phi_reg_pp0_iter7_r_5_reg_558(12 downto 10);
    tmp_fu_984_p4 <= ap_phi_reg_pp0_iter7_b_5_reg_532(12 downto 10);
    trunc_ln135_fu_774_p1 <= ap_sig_allocacmp_col_1(1 - 1 downto 0);
    trunc_ln260_3_fu_1028_p1 <= ap_phi_reg_pp0_iter7_g_4_reg_545(10 - 1 downto 0);
    trunc_ln260_4_fu_1056_p1 <= ap_phi_reg_pp0_iter7_r_5_reg_558(10 - 1 downto 0);
    trunc_ln260_fu_1000_p1 <= ap_phi_reg_pp0_iter7_b_5_reg_532(10 - 1 downto 0);
    zext_ln124_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_3_reg_1302_pp0_iter5_reg),13));
    zext_ln344_1_fu_732_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_col_1),12));
    zext_ln344_2_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_bram_read_count_load_1),64));
    zext_ln344_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_1_reg_1227_pp0_iter1_reg),64));
end behav;
