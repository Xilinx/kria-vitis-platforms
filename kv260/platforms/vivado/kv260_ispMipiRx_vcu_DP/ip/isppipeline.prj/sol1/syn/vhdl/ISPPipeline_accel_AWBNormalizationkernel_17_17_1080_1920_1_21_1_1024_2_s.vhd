-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ISPPipeline_accel_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    impop_data1_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    impop_data1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    impop_data1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    impop_data1_empty_n : IN STD_LOGIC;
    impop_data1_read : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (10 downto 0);
    ltm_in_data242_din : OUT STD_LOGIC_VECTOR (29 downto 0);
    ltm_in_data242_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    ltm_in_data242_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    ltm_in_data242_full_n : IN STD_LOGIC;
    ltm_in_data242_write : OUT STD_LOGIC;
    hist_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    hist_0_ce0 : OUT STD_LOGIC;
    hist_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    hist_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    hist_1_ce0 : OUT STD_LOGIC;
    hist_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    hist_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    hist_2_ce0 : OUT STD_LOGIC;
    hist_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of ISPPipeline_accel_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state112 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state113 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state114 : STD_LOGIC_VECTOR (125 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state115 : STD_LOGIC_VECTOR (125 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state116 : STD_LOGIC_VECTOR (125 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state117 : STD_LOGIC_VECTOR (125 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state118 : STD_LOGIC_VECTOR (125 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state119 : STD_LOGIC_VECTOR (125 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state120 : STD_LOGIC_VECTOR (125 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state121 : STD_LOGIC_VECTOR (125 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state122 : STD_LOGIC_VECTOR (125 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state123 : STD_LOGIC_VECTOR (125 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state124 : STD_LOGIC_VECTOR (125 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state125 : STD_LOGIC_VECTOR (125 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state126 : STD_LOGIC_VECTOR (125 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_7C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111100";
    constant ap_const_lv32_7B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv18_FFE0 : STD_LOGIC_VECTOR (17 downto 0) := "001111111111100000";
    constant ap_const_lv18_3FFE0 : STD_LOGIC_VECTOR (17 downto 0) := "111111111111100000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_E : STD_LOGIC_VECTOR (11 downto 0) := "000000001110";
    constant ap_const_lv12_FF2 : STD_LOGIC_VECTOR (11 downto 0) := "111111110010";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv12_12 : STD_LOGIC_VECTOR (11 downto 0) := "000000010010";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv18_3FFFF : STD_LOGIC_VECTOR (17 downto 0) := "111111111111111111";
    constant ap_const_lv21_190000 : STD_LOGIC_VECTOR (20 downto 0) := "110010000000000000000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv87_A3D70A3D70B : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000010100011110101110000101000111101011100001011";
    constant ap_const_lv81_147AE147AE2 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000010100011110101110000101000111101011100010";
    constant ap_const_lv40_FFFFFFFF9D : STD_LOGIC_VECTOR (39 downto 0) := "1111111111111111111111111111111110011101";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv81_0 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv27_1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (125 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal trunc_ln590_fu_406_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln590_reg_1024 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal p_Result_17_reg_1029 : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_tmp_reg_1034 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln600_fu_428_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln600_reg_1039 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal man_V_2_fu_460_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_2_reg_1064 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln606_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln606_reg_1069 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_496_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_1075 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln617_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln617_reg_1082 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln618_fu_510_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln618_reg_1087 : STD_LOGIC_VECTOR (17 downto 0);
    signal and_ln616_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln616_reg_1093 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln616_fu_532_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln616_reg_1098 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln620_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_reg_1103 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln617_fu_572_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln617_reg_1108 : STD_LOGIC_VECTOR (17 downto 0);
    signal s2_V_fu_623_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal s2_V_reg_1113 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_fu_920_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal total_reg_1119 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ret_V_54_fu_633_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_54_reg_1126 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_fu_645_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_24_reg_1151 : STD_LOGIC_VECTOR (42 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_fu_926_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal r_V_reg_1156 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal tmp_65_reg_1162 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal p_Result_s_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1178 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_676_p2 : STD_LOGIC_VECTOR (80 downto 0);
    signal mul_ln1349_reg_1183 : STD_LOGIC_VECTOR (80 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_67_reg_1188 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln1349_5_fu_716_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln1349_5_reg_1193 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal sub_ln1349_1_fu_726_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln1349_1_reg_1198 : STD_LOGIC_VECTOR (39 downto 0);
    signal ret_V_53_fu_775_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_53_reg_1203 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal zext_ln1029_fu_792_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal zext_ln1029_reg_1208 : STD_LOGIC_VECTOR (28 downto 0);
    signal j_5_reg_1213 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal sub_ln859_1_fu_823_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln859_1_reg_1222 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln303_fu_800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln859_2_fu_829_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln859_2_reg_1227 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln1700_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1700_reg_1232 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_load90_reg_1241 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal p_load84_reg_1246 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_load77_reg_1251 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln1700_1_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1700_1_reg_1256 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal icmp_ln1700_2_fu_876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1700_2_reg_1265 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal p_load87_reg_1284 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state125 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state125 : signal is "none";
    signal icmp_ln371_fu_904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_load80_reg_1289 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_load_reg_1294 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_start : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_done : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_idle : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_ready : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_0_ce0 : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_1_ce0 : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_2_ce0 : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_minValue_V_o : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_minValue_V_o_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_minValue_V_4_o : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_minValue_V_4_o_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_minValue_V_3_o : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_minValue_V_3_o_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_p_out : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_p_out_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_p_out1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_p_out1_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_p_out2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_p_out2_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_start : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_done : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_idle : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_ready : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_0_ce0 : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_1_ce0 : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_2_ce0 : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_maxValue_V_o : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_maxValue_V_o_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_maxValue_V_4_o : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_maxValue_V_4_o_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_maxValue_V_3_o : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_maxValue_V_3_o_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_p_out : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_p_out_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_p_out1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_p_out1_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_p_out2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_p_out2_ap_vld : STD_LOGIC;
    signal grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_start : STD_LOGIC;
    signal grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_done : STD_LOGIC;
    signal grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_idle : STD_LOGIC;
    signal grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_ready : STD_LOGIC;
    signal grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_impop_data1_read : STD_LOGIC;
    signal grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ltm_in_data242_din : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ltm_in_data242_write : STD_LOGIC;
    signal inv_val_V_fu_851_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal inv_val_V_1_reg_218 : STD_LOGIC_VECTOR (25 downto 0);
    signal inv_val_V_2_fu_871_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal inv_val_V_3_reg_230 : STD_LOGIC_VECTOR (25 downto 0);
    signal inv_val_V_4_fu_891_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal inv_val_V_5_reg_242 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_CS_fsm_state124 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state124 : signal is "none";
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_start_reg : STD_LOGIC := '0';
    signal minValue_V_fu_172 : STD_LOGIC_VECTOR (17 downto 0);
    signal minValue_V_5_fu_180 : STD_LOGIC_VECTOR (17 downto 0);
    signal minValue_V_4_fu_176 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_293_fu_168 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_291_fu_160 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_289_fu_152 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal maxValue_V_fu_184 : STD_LOGIC_VECTOR (17 downto 0);
    signal maxValue_V_9_fu_192 : STD_LOGIC_VECTOR (17 downto 0);
    signal maxValue_V_8_fu_188 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_292_fu_164 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_290_fu_156 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_fu_148 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state126 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state126 : signal is "none";
    signal j_fu_144 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln303_fu_806_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_V_fu_196 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_V_4_fu_909_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_312_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_fu_402_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_18_fu_443_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln604_fu_450_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_454_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal zext_ln501_fu_440_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_472_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln616_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln616_fu_484_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln616_fu_490_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln617_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln617_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln616cast_fu_545_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln638_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln639_fu_549_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal xor_ln606_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln617_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln638_fu_554_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln621_fu_579_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln621_fu_582_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln768_fu_591_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_594_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln621_fu_587_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln623_fu_602_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln620_fu_610_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln616_fu_617_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1394_fu_630_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_645_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_645_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_667_p0 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_667_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal grp_fu_676_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sub_ln1349_fu_697_p2 : STD_LOGIC_VECTOR (80 downto 0);
    signal tmp_66_fu_702_p4 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln1349_4_fu_712_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal select_ln1349_fu_719_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal select_ln1349_1_fu_732_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_s_fu_737_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln1049_fu_751_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1048_fu_747_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal icmp_ln1049_fu_755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_fu_761_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal select_ln1048_fu_767_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_667_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal tmp_68_fu_782_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln859_fu_817_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_845_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_865_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_885_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_920_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_920_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_926_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_845_ap_start : STD_LOGIC;
    signal grp_fu_845_ap_done : STD_LOGIC;
    signal grp_fu_865_ap_start : STD_LOGIC;
    signal grp_fu_865_ap_done : STD_LOGIC;
    signal grp_fu_885_ap_start : STD_LOGIC;
    signal grp_fu_885_ap_done : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (125 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ST_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_fsm_state79_blk : STD_LOGIC;
    signal ap_ST_fsm_state80_blk : STD_LOGIC;
    signal ap_ST_fsm_state81_blk : STD_LOGIC;
    signal ap_ST_fsm_state82_blk : STD_LOGIC;
    signal ap_ST_fsm_state83_blk : STD_LOGIC;
    signal ap_ST_fsm_state84_blk : STD_LOGIC;
    signal ap_ST_fsm_state85_blk : STD_LOGIC;
    signal ap_ST_fsm_state86_blk : STD_LOGIC;
    signal ap_ST_fsm_state87_blk : STD_LOGIC;
    signal ap_ST_fsm_state88_blk : STD_LOGIC;
    signal ap_ST_fsm_state89_blk : STD_LOGIC;
    signal ap_ST_fsm_state90_blk : STD_LOGIC;
    signal ap_ST_fsm_state91_blk : STD_LOGIC;
    signal ap_ST_fsm_state92_blk : STD_LOGIC;
    signal ap_ST_fsm_state93_blk : STD_LOGIC;
    signal ap_ST_fsm_state94_blk : STD_LOGIC;
    signal ap_ST_fsm_state95_blk : STD_LOGIC;
    signal ap_ST_fsm_state96_blk : STD_LOGIC;
    signal ap_ST_fsm_state97_blk : STD_LOGIC;
    signal ap_ST_fsm_state98_blk : STD_LOGIC;
    signal ap_ST_fsm_state99_blk : STD_LOGIC;
    signal ap_ST_fsm_state100_blk : STD_LOGIC;
    signal ap_ST_fsm_state101_blk : STD_LOGIC;
    signal ap_ST_fsm_state102_blk : STD_LOGIC;
    signal ap_ST_fsm_state103_blk : STD_LOGIC;
    signal ap_ST_fsm_state104_blk : STD_LOGIC;
    signal ap_ST_fsm_state105_blk : STD_LOGIC;
    signal ap_ST_fsm_state106_blk : STD_LOGIC;
    signal ap_ST_fsm_state107_blk : STD_LOGIC;
    signal ap_ST_fsm_state108_blk : STD_LOGIC;
    signal ap_ST_fsm_state109_blk : STD_LOGIC;
    signal ap_ST_fsm_state110_blk : STD_LOGIC;
    signal ap_ST_fsm_state111_blk : STD_LOGIC;
    signal ap_ST_fsm_state112_blk : STD_LOGIC;
    signal ap_ST_fsm_state113_blk : STD_LOGIC;
    signal ap_ST_fsm_state114_blk : STD_LOGIC;
    signal ap_ST_fsm_state115_blk : STD_LOGIC;
    signal ap_ST_fsm_state116_blk : STD_LOGIC;
    signal ap_ST_fsm_state117_blk : STD_LOGIC;
    signal ap_ST_fsm_state118_blk : STD_LOGIC;
    signal ap_ST_fsm_state119_blk : STD_LOGIC;
    signal ap_ST_fsm_state120_blk : STD_LOGIC;
    signal ap_ST_fsm_state121_blk : STD_LOGIC;
    signal ap_ST_fsm_state122_blk : STD_LOGIC;
    signal ap_ST_fsm_state123_blk : STD_LOGIC;
    signal ap_ST_fsm_state124_blk : STD_LOGIC;
    signal ap_ST_fsm_state125_blk : STD_LOGIC;
    signal ap_ST_fsm_state126_blk : STD_LOGIC;
    signal grp_fu_645_p00 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_645_p10 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_667_p00 : STD_LOGIC_VECTOR (86 downto 0);
    signal grp_fu_920_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_920_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_926_p00 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component ISPPipeline_accel_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        hist_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        hist_0_ce0 : OUT STD_LOGIC;
        hist_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        hist_1_ce0 : OUT STD_LOGIC;
        hist_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        hist_2_ce0 : OUT STD_LOGIC;
        hist_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        j : IN STD_LOGIC_VECTOR (1 downto 0);
        conv_i_i1584 : IN STD_LOGIC_VECTOR (26 downto 0);
        minValue_V_i : IN STD_LOGIC_VECTOR (17 downto 0);
        minValue_V_o : OUT STD_LOGIC_VECTOR (17 downto 0);
        minValue_V_o_ap_vld : OUT STD_LOGIC;
        minValue_V_4_i : IN STD_LOGIC_VECTOR (17 downto 0);
        minValue_V_4_o : OUT STD_LOGIC_VECTOR (17 downto 0);
        minValue_V_4_o_ap_vld : OUT STD_LOGIC;
        minValue_V_3_i : IN STD_LOGIC_VECTOR (17 downto 0);
        minValue_V_3_o : OUT STD_LOGIC_VECTOR (17 downto 0);
        minValue_V_3_o_ap_vld : OUT STD_LOGIC;
        p_out : OUT STD_LOGIC_VECTOR (17 downto 0);
        p_out_ap_vld : OUT STD_LOGIC;
        p_out1 : OUT STD_LOGIC_VECTOR (17 downto 0);
        p_out1_ap_vld : OUT STD_LOGIC;
        p_out2 : OUT STD_LOGIC_VECTOR (17 downto 0);
        p_out2_ap_vld : OUT STD_LOGIC );
    end component;


    component ISPPipeline_accel_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        empty_98 : IN STD_LOGIC_VECTOR (17 downto 0);
        empty_99 : IN STD_LOGIC_VECTOR (17 downto 0);
        empty : IN STD_LOGIC_VECTOR (17 downto 0);
        zext_ln285 : IN STD_LOGIC_VECTOR (21 downto 0);
        hist_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        hist_0_ce0 : OUT STD_LOGIC;
        hist_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        hist_1_ce0 : OUT STD_LOGIC;
        hist_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        hist_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        hist_2_ce0 : OUT STD_LOGIC;
        hist_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        j : IN STD_LOGIC_VECTOR (1 downto 0);
        conv_i_i1466 : IN STD_LOGIC_VECTOR (28 downto 0);
        maxValue_V_i : IN STD_LOGIC_VECTOR (17 downto 0);
        maxValue_V_o : OUT STD_LOGIC_VECTOR (17 downto 0);
        maxValue_V_o_ap_vld : OUT STD_LOGIC;
        maxValue_V_4_i : IN STD_LOGIC_VECTOR (17 downto 0);
        maxValue_V_4_o : OUT STD_LOGIC_VECTOR (17 downto 0);
        maxValue_V_4_o_ap_vld : OUT STD_LOGIC;
        maxValue_V_3_i : IN STD_LOGIC_VECTOR (17 downto 0);
        maxValue_V_3_o : OUT STD_LOGIC_VECTOR (17 downto 0);
        maxValue_V_3_o_ap_vld : OUT STD_LOGIC;
        p_out : OUT STD_LOGIC_VECTOR (17 downto 0);
        p_out_ap_vld : OUT STD_LOGIC;
        p_out1 : OUT STD_LOGIC_VECTOR (17 downto 0);
        p_out1_ap_vld : OUT STD_LOGIC;
        p_out2 : OUT STD_LOGIC_VECTOR (17 downto 0);
        p_out2_ap_vld : OUT STD_LOGIC );
    end component;


    component ISPPipeline_accel_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        impop_data1_dout : IN STD_LOGIC_VECTOR (29 downto 0);
        impop_data1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        impop_data1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        impop_data1_empty_n : IN STD_LOGIC;
        impop_data1_read : OUT STD_LOGIC;
        ltm_in_data242_din : OUT STD_LOGIC_VECTOR (29 downto 0);
        ltm_in_data242_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        ltm_in_data242_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        ltm_in_data242_full_n : IN STD_LOGIC;
        ltm_in_data242_write : OUT STD_LOGIC;
        p_read1 : IN STD_LOGIC_VECTOR (10 downto 0);
        empty_100 : IN STD_LOGIC_VECTOR (17 downto 0);
        conv7_i184 : IN STD_LOGIC_VECTOR (25 downto 0);
        empty_101 : IN STD_LOGIC_VECTOR (17 downto 0);
        conv7_i184_1 : IN STD_LOGIC_VECTOR (25 downto 0);
        empty : IN STD_LOGIC_VECTOR (17 downto 0);
        conv7_i184_2 : IN STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component ISPPipeline_accel_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component ISPPipeline_accel_mul_22ns_21ns_43_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (21 downto 0);
        din1 : IN STD_LOGIC_VECTOR (20 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (42 downto 0) );
    end component;


    component ISPPipeline_accel_mul_43ns_45ns_87_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (42 downto 0);
        din1 : IN STD_LOGIC_VECTOR (44 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (86 downto 0) );
    end component;


    component ISPPipeline_accel_mul_40s_42ns_81_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (39 downto 0);
        din1 : IN STD_LOGIC_VECTOR (41 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (80 downto 0) );
    end component;


    component ISPPipeline_accel_sdiv_32ns_18s_26_36_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component ISPPipeline_accel_mul_mul_11ns_11ns_22_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component ISPPipeline_accel_mul_mul_22ns_18s_40_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (21 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;



begin
    grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254 : component ISPPipeline_accel_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_start,
        ap_done => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_done,
        ap_idle => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_idle,
        ap_ready => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_ready,
        hist_0_address0 => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_0_address0,
        hist_0_ce0 => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_0_ce0,
        hist_0_q0 => hist_0_q0,
        hist_1_address0 => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_1_address0,
        hist_1_ce0 => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_1_ce0,
        hist_1_q0 => hist_1_q0,
        hist_2_address0 => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_2_address0,
        hist_2_ce0 => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_2_ce0,
        hist_2_q0 => hist_2_q0,
        j => j_5_reg_1213,
        conv_i_i1584 => ret_V_53_reg_1203,
        minValue_V_i => minValue_V_fu_172,
        minValue_V_o => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_minValue_V_o,
        minValue_V_o_ap_vld => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_minValue_V_o_ap_vld,
        minValue_V_4_i => minValue_V_5_fu_180,
        minValue_V_4_o => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_minValue_V_4_o,
        minValue_V_4_o_ap_vld => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_minValue_V_4_o_ap_vld,
        minValue_V_3_i => minValue_V_4_fu_176,
        minValue_V_3_o => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_minValue_V_3_o,
        minValue_V_3_o_ap_vld => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_minValue_V_3_o_ap_vld,
        p_out => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_p_out,
        p_out_ap_vld => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_p_out_ap_vld,
        p_out1 => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_p_out1,
        p_out1_ap_vld => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_p_out1_ap_vld,
        p_out2 => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_p_out2,
        p_out2_ap_vld => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_p_out2_ap_vld);

    grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272 : component ISPPipeline_accel_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_start,
        ap_done => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_done,
        ap_idle => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_idle,
        ap_ready => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_ready,
        empty_98 => p_load77_reg_1251,
        empty_99 => p_load84_reg_1246,
        empty => p_load90_reg_1241,
        zext_ln285 => total_reg_1119,
        hist_0_address0 => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_0_address0,
        hist_0_ce0 => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_0_ce0,
        hist_0_q0 => hist_0_q0,
        hist_1_address0 => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_1_address0,
        hist_1_ce0 => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_1_ce0,
        hist_1_q0 => hist_1_q0,
        hist_2_address0 => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_2_address0,
        hist_2_ce0 => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_2_ce0,
        hist_2_q0 => hist_2_q0,
        j => j_5_reg_1213,
        conv_i_i1466 => zext_ln1029_reg_1208,
        maxValue_V_i => maxValue_V_fu_184,
        maxValue_V_o => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_maxValue_V_o,
        maxValue_V_o_ap_vld => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_maxValue_V_o_ap_vld,
        maxValue_V_4_i => maxValue_V_9_fu_192,
        maxValue_V_4_o => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_maxValue_V_4_o,
        maxValue_V_4_o_ap_vld => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_maxValue_V_4_o_ap_vld,
        maxValue_V_3_i => maxValue_V_8_fu_188,
        maxValue_V_3_o => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_maxValue_V_3_o,
        maxValue_V_3_o_ap_vld => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_maxValue_V_3_o_ap_vld,
        p_out => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_p_out,
        p_out_ap_vld => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_p_out_ap_vld,
        p_out1 => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_p_out1,
        p_out1_ap_vld => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_p_out1_ap_vld,
        p_out2 => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_p_out2,
        p_out2_ap_vld => grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_p_out2_ap_vld);

    grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294 : component ISPPipeline_accel_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_start,
        ap_done => grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_done,
        ap_idle => grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_idle,
        ap_ready => grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_ready,
        impop_data1_dout => impop_data1_dout,
        impop_data1_num_data_valid => ap_const_lv2_0,
        impop_data1_fifo_cap => ap_const_lv2_0,
        impop_data1_empty_n => impop_data1_empty_n,
        impop_data1_read => grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_impop_data1_read,
        ltm_in_data242_din => grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ltm_in_data242_din,
        ltm_in_data242_num_data_valid => ap_const_lv2_0,
        ltm_in_data242_fifo_cap => ap_const_lv2_0,
        ltm_in_data242_full_n => ltm_in_data242_full_n,
        ltm_in_data242_write => grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ltm_in_data242_write,
        p_read1 => p_read1,
        empty_100 => p_load87_reg_1284,
        conv7_i184 => inv_val_V_1_reg_218,
        empty_101 => p_load80_reg_1289,
        conv7_i184_1 => inv_val_V_3_reg_230,
        empty => p_load_reg_1294,
        conv7_i184_2 => inv_val_V_5_reg_242);

    fpext_32ns_64_2_no_dsp_1_U307 : component ISPPipeline_accel_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p,
        ce => ap_const_logic_1,
        dout => grp_fu_312_p1);

    mul_22ns_21ns_43_4_1_U308 : component ISPPipeline_accel_mul_22ns_21ns_43_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 22,
        din1_WIDTH => 21,
        dout_WIDTH => 43)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_645_p0,
        din1 => grp_fu_645_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_645_p2);

    mul_43ns_45ns_87_5_1_U309 : component ISPPipeline_accel_mul_43ns_45ns_87_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 43,
        din1_WIDTH => 45,
        dout_WIDTH => 87)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_667_p0,
        din1 => grp_fu_667_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_667_p2);

    mul_40s_42ns_81_2_1_U310 : component ISPPipeline_accel_mul_40s_42ns_81_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 40,
        din1_WIDTH => 42,
        dout_WIDTH => 81)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => r_V_reg_1156,
        din1 => grp_fu_676_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_676_p2);

    sdiv_32ns_18s_26_36_seq_1_U311 : component ISPPipeline_accel_sdiv_32ns_18s_26_36_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 36,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_845_ap_start,
        done => grp_fu_845_ap_done,
        din0 => ap_const_lv32_40000000,
        din1 => sub_ln859_fu_817_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_845_p2);

    sdiv_32ns_18s_26_36_seq_1_U312 : component ISPPipeline_accel_sdiv_32ns_18s_26_36_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 36,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_865_ap_start,
        done => grp_fu_865_ap_done,
        din0 => ap_const_lv32_40000000,
        din1 => sub_ln859_1_reg_1222,
        ce => ap_const_logic_1,
        dout => grp_fu_865_p2);

    sdiv_32ns_18s_26_36_seq_1_U313 : component ISPPipeline_accel_sdiv_32ns_18s_26_36_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 36,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_885_ap_start,
        done => grp_fu_885_ap_done,
        din0 => ap_const_lv32_40000000,
        din1 => sub_ln859_2_reg_1227,
        ce => ap_const_logic_1,
        dout => grp_fu_885_p2);

    mul_mul_11ns_11ns_22_4_1_U314 : component ISPPipeline_accel_mul_mul_11ns_11ns_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_920_p0,
        din1 => grp_fu_920_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_920_p2);

    mul_mul_22ns_18s_40_4_1_U315 : component ISPPipeline_accel_mul_mul_22ns_18s_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 22,
        din1_WIDTH => 18,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_926_p0,
        din1 => s2_V_reg_1113,
        ce => ap_const_logic_1,
        dout => grp_fu_926_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln371_fu_904_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state125))) then 
                    grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_ready = ap_const_logic_1)) then 
                    grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln303_fu_800_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                    grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_ready = ap_const_logic_1)) then 
                    grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_ready = ap_const_logic_1)) then 
                    grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_289_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                empty_289_fu_152 <= ap_const_lv18_3FFE0;
            elsif (((grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_p_out2_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                empty_289_fu_152 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_p_out2;
            end if; 
        end if;
    end process;

    empty_290_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                empty_290_fu_156 <= ap_const_lv18_FFE0;
            elsif (((grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_p_out1_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                empty_290_fu_156 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_p_out1;
            end if; 
        end if;
    end process;

    empty_291_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                empty_291_fu_160 <= ap_const_lv18_3FFE0;
            elsif (((grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_p_out1_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                empty_291_fu_160 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_p_out1;
            end if; 
        end if;
    end process;

    empty_292_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                empty_292_fu_164 <= ap_const_lv18_FFE0;
            elsif (((grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_p_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                empty_292_fu_164 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_p_out;
            end if; 
        end if;
    end process;

    empty_293_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                empty_293_fu_168 <= ap_const_lv18_3FFE0;
            elsif (((grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_p_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                empty_293_fu_168 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_p_out;
            end if; 
        end if;
    end process;

    empty_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                empty_fu_148 <= ap_const_lv18_FFE0;
            elsif (((grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_p_out2_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                empty_fu_148 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_p_out2;
            end if; 
        end if;
    end process;

    j_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_fu_144 <= ap_const_lv2_0;
            elsif (((icmp_ln303_fu_800_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                j_fu_144 <= add_ln303_fu_806_p2;
            end if; 
        end if;
    end process;

    maxValue_V_8_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                maxValue_V_8_fu_188 <= ap_const_lv18_FFE0;
            elsif (((grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_maxValue_V_3_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                maxValue_V_8_fu_188 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_maxValue_V_3_o;
            end if; 
        end if;
    end process;

    maxValue_V_9_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                maxValue_V_9_fu_192 <= ap_const_lv18_FFE0;
            elsif (((grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_maxValue_V_4_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                maxValue_V_9_fu_192 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_maxValue_V_4_o;
            end if; 
        end if;
    end process;

    maxValue_V_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                maxValue_V_fu_184 <= ap_const_lv18_FFE0;
            elsif (((grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_maxValue_V_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                maxValue_V_fu_184 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_maxValue_V_o;
            end if; 
        end if;
    end process;

    minValue_V_4_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                minValue_V_4_fu_176 <= ap_const_lv18_3FFE0;
            elsif (((grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_minValue_V_3_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                minValue_V_4_fu_176 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_minValue_V_3_o;
            end if; 
        end if;
    end process;

    minValue_V_5_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                minValue_V_5_fu_180 <= ap_const_lv18_3FFE0;
            elsif (((grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_minValue_V_4_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                minValue_V_5_fu_180 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_minValue_V_4_o;
            end if; 
        end if;
    end process;

    minValue_V_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                minValue_V_fu_172 <= ap_const_lv18_3FFE0;
            elsif (((grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_minValue_V_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                minValue_V_fu_172 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_minValue_V_o;
            end if; 
        end if;
    end process;

    row_V_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state124)) then 
                row_V_fu_196 <= ap_const_lv11_0;
            elsif (((icmp_ln371_fu_904_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state125))) then 
                row_V_fu_196 <= row_V_4_fu_909_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                and_ln616_reg_1093 <= and_ln616_fu_526_p2;
                icmp_ln606_reg_1069 <= icmp_ln606_fu_467_p2;
                icmp_ln617_reg_1082 <= icmp_ln617_fu_504_p2;
                man_V_2_reg_1064 <= man_V_2_fu_460_p3;
                sh_amt_reg_1075 <= sh_amt_fu_496_p3;
                trunc_ln618_reg_1087 <= trunc_ln618_fu_510_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                exp_tmp_reg_1034 <= ireg_fu_402_p1(62 downto 52);
                p_Result_17_reg_1029 <= ireg_fu_402_p1(63 downto 63);
                trunc_ln590_reg_1024 <= trunc_ln590_fu_406_p1;
                trunc_ln600_reg_1039 <= trunc_ln600_fu_428_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                icmp_ln1700_1_reg_1256 <= icmp_ln1700_1_fu_856_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state89)) then
                icmp_ln1700_2_reg_1265 <= icmp_ln1700_2_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln303_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                icmp_ln1700_reg_1232 <= icmp_ln1700_fu_835_p2;
                sub_ln859_1_reg_1222 <= sub_ln859_1_fu_823_p2;
                sub_ln859_2_reg_1227 <= sub_ln859_2_fu_829_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln616_reg_1093) and (icmp_ln606_reg_1069 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                icmp_ln620_reg_1103 <= icmp_ln620_fu_535_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1700_reg_1232 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                inv_val_V_1_reg_218 <= inv_val_V_fu_851_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1700_1_reg_1256 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state89))) then
                inv_val_V_3_reg_230 <= inv_val_V_2_fu_871_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1700_2_reg_1265 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state124))) then
                inv_val_V_5_reg_242 <= inv_val_V_4_fu_891_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                j_5_reg_1213 <= j_fu_144;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                mul_ln1349_reg_1183 <= grp_fu_676_p2;
                tmp_67_reg_1188 <= grp_fu_676_p2(80 downto 47);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                p_Result_s_reg_1178 <= p_Result_s_fu_682_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                p_load77_reg_1251 <= empty_292_fu_164;
                p_load84_reg_1246 <= empty_290_fu_156;
                p_load90_reg_1241 <= empty_fu_148;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln371_fu_904_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state125))) then
                p_load80_reg_1289 <= empty_291_fu_160;
                p_load87_reg_1284 <= empty_289_fu_152;
                p_load_reg_1294 <= empty_293_fu_168;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                r_V_24_reg_1151 <= grp_fu_645_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                r_V_reg_1156 <= grp_fu_926_p2;
                tmp_65_reg_1162 <= grp_fu_926_p2(39 downto 39);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                ret_V_53_reg_1203 <= ret_V_53_fu_775_p3;
                    zext_ln1029_reg_1208(22 downto 0) <= zext_ln1029_fu_792_p1(22 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                ret_V_54_reg_1126 <= ret_V_54_fu_633_p2;
                total_reg_1119 <= grp_fu_920_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                s2_V_reg_1113 <= s2_V_fu_623_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln616_reg_1093) and (icmp_ln606_reg_1069 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                select_ln617_reg_1108 <= select_ln617_fu_572_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                sext_ln1349_5_reg_1193 <= sext_ln1349_5_fu_716_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln606_reg_1069 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                sext_ln616_reg_1098 <= sext_ln616_fu_532_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_65_reg_1162 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                sub_ln1349_1_reg_1198 <= sub_ln1349_1_fu_726_p2;
            end if;
        end if;
    end process;
    zext_ln1029_reg_1208(28 downto 23) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state16, icmp_ln303_fu_800_p2, icmp_ln1700_fu_835_p2, ap_CS_fsm_state17, icmp_ln1700_1_fu_856_p2, ap_CS_fsm_state54, icmp_ln1700_2_fu_876_p2, ap_CS_fsm_state89, ap_CS_fsm_state125, icmp_ln371_fu_904_p2, grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_done, grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_done, grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_done, ap_CS_fsm_state19, ap_CS_fsm_state126)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((icmp_ln1700_fu_835_p2 = ap_const_lv1_1) and (icmp_ln303_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                elsif (((icmp_ln1700_fu_835_p2 = ap_const_lv1_0) and (icmp_ln303_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                if (((grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                if (((icmp_ln1700_1_fu_856_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                    ap_NS_fsm <= ap_ST_fsm_state89;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                if (((icmp_ln1700_2_fu_876_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state89))) then
                    ap_NS_fsm <= ap_ST_fsm_state124;
                else
                    ap_NS_fsm <= ap_ST_fsm_state90;
                end if;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state104;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                ap_NS_fsm <= ap_ST_fsm_state107;
            when ap_ST_fsm_state107 => 
                ap_NS_fsm <= ap_ST_fsm_state108;
            when ap_ST_fsm_state108 => 
                ap_NS_fsm <= ap_ST_fsm_state109;
            when ap_ST_fsm_state109 => 
                ap_NS_fsm <= ap_ST_fsm_state110;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state111;
            when ap_ST_fsm_state111 => 
                ap_NS_fsm <= ap_ST_fsm_state112;
            when ap_ST_fsm_state112 => 
                ap_NS_fsm <= ap_ST_fsm_state113;
            when ap_ST_fsm_state113 => 
                ap_NS_fsm <= ap_ST_fsm_state114;
            when ap_ST_fsm_state114 => 
                ap_NS_fsm <= ap_ST_fsm_state115;
            when ap_ST_fsm_state115 => 
                ap_NS_fsm <= ap_ST_fsm_state116;
            when ap_ST_fsm_state116 => 
                ap_NS_fsm <= ap_ST_fsm_state117;
            when ap_ST_fsm_state117 => 
                ap_NS_fsm <= ap_ST_fsm_state118;
            when ap_ST_fsm_state118 => 
                ap_NS_fsm <= ap_ST_fsm_state119;
            when ap_ST_fsm_state119 => 
                ap_NS_fsm <= ap_ST_fsm_state120;
            when ap_ST_fsm_state120 => 
                ap_NS_fsm <= ap_ST_fsm_state121;
            when ap_ST_fsm_state121 => 
                ap_NS_fsm <= ap_ST_fsm_state122;
            when ap_ST_fsm_state122 => 
                ap_NS_fsm <= ap_ST_fsm_state123;
            when ap_ST_fsm_state123 => 
                ap_NS_fsm <= ap_ST_fsm_state124;
            when ap_ST_fsm_state124 => 
                ap_NS_fsm <= ap_ST_fsm_state125;
            when ap_ST_fsm_state125 => 
                if (((icmp_ln371_fu_904_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state125))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state126;
                end if;
            when ap_ST_fsm_state126 => 
                if (((grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state126))) then
                    ap_NS_fsm <= ap_ST_fsm_state125;
                else
                    ap_NS_fsm <= ap_ST_fsm_state126;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_fu_472_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln501_fu_440_p1));
    add_ln303_fu_806_p2 <= std_logic_vector(unsigned(j_fu_144) + unsigned(ap_const_lv2_1));
    add_ln616_fu_484_p2 <= std_logic_vector(unsigned(F2_fu_472_p2) + unsigned(ap_const_lv12_FF2));
    and_ln616_fu_526_p2 <= (xor_ln617_fu_520_p2 and icmp_ln616_fu_478_p2);
    and_ln617_fu_567_p2 <= (xor_ln606_fu_562_p2 and icmp_ln617_reg_1082);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state124 <= ap_CS_fsm(123);
    ap_CS_fsm_state125 <= ap_CS_fsm(124);
    ap_CS_fsm_state126 <= ap_CS_fsm(125);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state89 <= ap_CS_fsm(88);
    ap_ST_fsm_state100_blk <= ap_const_logic_0;
    ap_ST_fsm_state101_blk <= ap_const_logic_0;
    ap_ST_fsm_state102_blk <= ap_const_logic_0;
    ap_ST_fsm_state103_blk <= ap_const_logic_0;
    ap_ST_fsm_state104_blk <= ap_const_logic_0;
    ap_ST_fsm_state105_blk <= ap_const_logic_0;
    ap_ST_fsm_state106_blk <= ap_const_logic_0;
    ap_ST_fsm_state107_blk <= ap_const_logic_0;
    ap_ST_fsm_state108_blk <= ap_const_logic_0;
    ap_ST_fsm_state109_blk <= ap_const_logic_0;
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state110_blk <= ap_const_logic_0;
    ap_ST_fsm_state111_blk <= ap_const_logic_0;
    ap_ST_fsm_state112_blk <= ap_const_logic_0;
    ap_ST_fsm_state113_blk <= ap_const_logic_0;
    ap_ST_fsm_state114_blk <= ap_const_logic_0;
    ap_ST_fsm_state115_blk <= ap_const_logic_0;
    ap_ST_fsm_state116_blk <= ap_const_logic_0;
    ap_ST_fsm_state117_blk <= ap_const_logic_0;
    ap_ST_fsm_state118_blk <= ap_const_logic_0;
    ap_ST_fsm_state119_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state120_blk <= ap_const_logic_0;
    ap_ST_fsm_state121_blk <= ap_const_logic_0;
    ap_ST_fsm_state122_blk <= ap_const_logic_0;
    ap_ST_fsm_state123_blk <= ap_const_logic_0;
    ap_ST_fsm_state124_blk <= ap_const_logic_0;
    ap_ST_fsm_state125_blk <= ap_const_logic_0;

    ap_ST_fsm_state126_blk_assign_proc : process(grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_done)
    begin
        if ((grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state126_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state126_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_done)
    begin
        if ((grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_done)
    begin
        if ((grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_fsm_state74_blk <= ap_const_logic_0;
    ap_ST_fsm_state75_blk <= ap_const_logic_0;
    ap_ST_fsm_state76_blk <= ap_const_logic_0;
    ap_ST_fsm_state77_blk <= ap_const_logic_0;
    ap_ST_fsm_state78_blk <= ap_const_logic_0;
    ap_ST_fsm_state79_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state80_blk <= ap_const_logic_0;
    ap_ST_fsm_state81_blk <= ap_const_logic_0;
    ap_ST_fsm_state82_blk <= ap_const_logic_0;
    ap_ST_fsm_state83_blk <= ap_const_logic_0;
    ap_ST_fsm_state84_blk <= ap_const_logic_0;
    ap_ST_fsm_state85_blk <= ap_const_logic_0;
    ap_ST_fsm_state86_blk <= ap_const_logic_0;
    ap_ST_fsm_state87_blk <= ap_const_logic_0;
    ap_ST_fsm_state88_blk <= ap_const_logic_0;
    ap_ST_fsm_state89_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state90_blk <= ap_const_logic_0;
    ap_ST_fsm_state91_blk <= ap_const_logic_0;
    ap_ST_fsm_state92_blk <= ap_const_logic_0;
    ap_ST_fsm_state93_blk <= ap_const_logic_0;
    ap_ST_fsm_state94_blk <= ap_const_logic_0;
    ap_ST_fsm_state95_blk <= ap_const_logic_0;
    ap_ST_fsm_state96_blk <= ap_const_logic_0;
    ap_ST_fsm_state97_blk <= ap_const_logic_0;
    ap_ST_fsm_state98_blk <= ap_const_logic_0;
    ap_ST_fsm_state99_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state125, icmp_ln371_fu_904_p2)
    begin
        if ((((icmp_ln371_fu_904_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state125)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state125, icmp_ln371_fu_904_p2)
    begin
        if (((icmp_ln371_fu_904_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state125))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln621_fu_582_p2 <= std_logic_vector(shift_right(signed(man_V_2_reg_1064),to_integer(unsigned('0' & zext_ln621_fu_579_p1(31-1 downto 0)))));
    bitcast_ln768_fu_591_p1 <= p;
    grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_start <= grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ap_start_reg;
    grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_start <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_ap_start_reg;
    grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_start <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_ap_start_reg;
    grp_fu_645_p0 <= grp_fu_645_p00(22 - 1 downto 0);
    grp_fu_645_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(total_reg_1119),43));
    grp_fu_645_p1 <= grp_fu_645_p10(21 - 1 downto 0);
    grp_fu_645_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_54_reg_1126),43));
    grp_fu_667_p0 <= grp_fu_667_p00(43 - 1 downto 0);
    grp_fu_667_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_24_reg_1151),87));
    grp_fu_667_p1 <= ap_const_lv87_A3D70A3D70B(45 - 1 downto 0);
    grp_fu_676_p1 <= ap_const_lv81_147AE147AE2(42 - 1 downto 0);

    grp_fu_845_ap_start_assign_proc : process(ap_CS_fsm_state16, icmp_ln303_fu_800_p2, icmp_ln1700_fu_835_p2)
    begin
        if (((icmp_ln1700_fu_835_p2 = ap_const_lv1_0) and (icmp_ln303_fu_800_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_fu_845_ap_start <= ap_const_logic_1;
        else 
            grp_fu_845_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_865_ap_start_assign_proc : process(icmp_ln1700_1_fu_856_p2, ap_CS_fsm_state54)
    begin
        if (((icmp_ln1700_1_fu_856_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            grp_fu_865_ap_start <= ap_const_logic_1;
        else 
            grp_fu_865_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_885_ap_start_assign_proc : process(icmp_ln1700_2_fu_876_p2, ap_CS_fsm_state89)
    begin
        if (((icmp_ln1700_2_fu_876_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state89))) then 
            grp_fu_885_ap_start <= ap_const_logic_1;
        else 
            grp_fu_885_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_920_p0 <= grp_fu_920_p00(11 - 1 downto 0);
    grp_fu_920_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read),22));
    grp_fu_920_p1 <= grp_fu_920_p10(11 - 1 downto 0);
    grp_fu_920_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read1),22));
    grp_fu_926_p0 <= grp_fu_926_p00(22 - 1 downto 0);
    grp_fu_926_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(total_reg_1119),40));

    hist_0_address0_assign_proc : process(ap_CS_fsm_state17, grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_0_address0, grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_0_address0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            hist_0_address0 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            hist_0_address0 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_0_address0;
        else 
            hist_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    hist_0_ce0_assign_proc : process(ap_CS_fsm_state17, grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_0_ce0, grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_0_ce0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            hist_0_ce0 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            hist_0_ce0 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_0_ce0;
        else 
            hist_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hist_1_address0_assign_proc : process(ap_CS_fsm_state17, grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_1_address0, grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_1_address0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            hist_1_address0 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            hist_1_address0 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_1_address0;
        else 
            hist_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    hist_1_ce0_assign_proc : process(ap_CS_fsm_state17, grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_1_ce0, grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_1_ce0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            hist_1_ce0 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            hist_1_ce0 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_1_ce0;
        else 
            hist_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hist_2_address0_assign_proc : process(ap_CS_fsm_state17, grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_2_address0, grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_2_address0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            hist_2_address0 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            hist_2_address0 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_2_address0;
        else 
            hist_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    hist_2_ce0_assign_proc : process(ap_CS_fsm_state17, grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_2_ce0, grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_2_ce0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            hist_2_ce0 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4_fu_272_hist_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            hist_2_ce0 <= grp_AWBNormalizationkernel_Pipeline_VITIS_LOOP_319_3_fu_254_hist_2_ce0;
        else 
            hist_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1049_fu_755_p2 <= "1" when (trunc_ln1049_fu_751_p1 = ap_const_lv14_0) else "0";
    icmp_ln1700_1_fu_856_p2 <= "1" when (empty_290_fu_156 = empty_291_fu_160) else "0";
    icmp_ln1700_2_fu_876_p2 <= "1" when (empty_292_fu_164 = empty_293_fu_168) else "0";
    icmp_ln1700_fu_835_p2 <= "1" when (empty_fu_148 = empty_289_fu_152) else "0";
    icmp_ln303_fu_800_p2 <= "1" when (j_fu_144 = ap_const_lv2_3) else "0";
    icmp_ln371_fu_904_p2 <= "1" when (row_V_fu_196 = p_read) else "0";
    icmp_ln606_fu_467_p2 <= "1" when (trunc_ln590_reg_1024 = ap_const_lv63_0) else "0";
    icmp_ln616_fu_478_p2 <= "1" when (signed(F2_fu_472_p2) > signed(ap_const_lv12_E)) else "0";
    icmp_ln617_fu_504_p2 <= "1" when (F2_fu_472_p2 = ap_const_lv12_E) else "0";
    icmp_ln620_fu_535_p2 <= "1" when (unsigned(sh_amt_reg_1075) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln638_fu_540_p2 <= "1" when (unsigned(sh_amt_reg_1075) < unsigned(ap_const_lv12_12)) else "0";

    impop_data1_read_assign_proc : process(grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_impop_data1_read, ap_CS_fsm_state126)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state126)) then 
            impop_data1_read <= grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_impop_data1_read;
        else 
            impop_data1_read <= ap_const_logic_0;
        end if; 
    end process;

    inv_val_V_2_fu_871_p1 <= grp_fu_865_p2(26 - 1 downto 0);
    inv_val_V_4_fu_891_p1 <= grp_fu_885_p2(26 - 1 downto 0);
    inv_val_V_fu_851_p1 <= grp_fu_845_p2(26 - 1 downto 0);
    ireg_fu_402_p1 <= grp_fu_312_p1;
    ltm_in_data242_din <= grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ltm_in_data242_din;

    ltm_in_data242_write_assign_proc : process(grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ltm_in_data242_write, ap_CS_fsm_state126)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state126)) then 
            ltm_in_data242_write <= grp_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1_fu_294_ltm_in_data242_write;
        else 
            ltm_in_data242_write <= ap_const_logic_0;
        end if; 
    end process;

    man_V_1_fu_454_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln604_fu_450_p1));
    man_V_2_fu_460_p3 <= 
        man_V_1_fu_454_p2 when (p_Result_17_reg_1029(0) = '1') else 
        zext_ln604_fu_450_p1;
    or_ln617_fu_514_p2 <= (icmp_ln617_fu_504_p2 or icmp_ln606_fu_467_p2);
    p_Result_18_fu_443_p3 <= (ap_const_lv1_1 & trunc_ln600_reg_1039);
    p_Result_s_fu_682_p2 <= "1" when (signed(r_V_reg_1156) < signed(ap_const_lv40_FFFFFFFF9D)) else "0";
    ret_V_53_fu_775_p3 <= 
        select_ln1048_fu_767_p3 when (p_Result_s_reg_1178(0) = '1') else 
        sext_ln1048_fu_747_p1;
    ret_V_54_fu_633_p2 <= std_logic_vector(signed(ap_const_lv21_190000) - signed(sext_ln1394_fu_630_p1));
    ret_V_fu_761_p2 <= std_logic_vector(signed(sext_ln1048_fu_747_p1) + signed(ap_const_lv27_1));
    row_V_4_fu_909_p2 <= std_logic_vector(unsigned(row_V_fu_196) + unsigned(ap_const_lv11_1));
    s2_V_fu_623_p3 <= 
        ap_const_lv18_0 when (icmp_ln606_reg_1069(0) = '1') else 
        select_ln616_fu_617_p3;
    select_ln1048_fu_767_p3 <= 
        sext_ln1048_fu_747_p1 when (icmp_ln1049_fu_755_p2(0) = '1') else 
        ret_V_fu_761_p2;
    select_ln1349_1_fu_732_p3 <= 
        sub_ln1349_1_reg_1198 when (tmp_65_reg_1162(0) = '1') else 
        sext_ln1349_5_reg_1193;
    select_ln1349_fu_719_p3 <= 
        sext_ln1349_4_fu_712_p1 when (tmp_65_reg_1162(0) = '1') else 
        sext_ln1349_5_fu_716_p1;
    select_ln616_fu_617_p3 <= 
        select_ln620_fu_610_p3 when (and_ln616_reg_1093(0) = '1') else 
        select_ln617_reg_1108;
    select_ln617_fu_572_p3 <= 
        trunc_ln618_reg_1087 when (and_ln617_fu_567_p2(0) = '1') else 
        select_ln638_fu_554_p3;
    select_ln620_fu_610_p3 <= 
        trunc_ln621_fu_587_p1 when (icmp_ln620_reg_1103(0) = '1') else 
        select_ln623_fu_602_p3;
    select_ln623_fu_602_p3 <= 
        ap_const_lv18_3FFFF when (tmp_fu_594_p3(0) = '1') else 
        ap_const_lv18_0;
    select_ln638_fu_554_p3 <= 
        shl_ln639_fu_549_p2 when (icmp_ln638_fu_540_p2(0) = '1') else 
        ap_const_lv18_0;
        sext_ln1048_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_737_p4),27));

        sext_ln1349_4_fu_712_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_66_fu_702_p4),40));

        sext_ln1349_5_fu_716_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_67_reg_1188),40));

        sext_ln1394_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(s2_V_reg_1113),21));

        sext_ln616_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_1075),32));

    sext_ln616cast_fu_545_p1 <= sext_ln616_fu_532_p1(18 - 1 downto 0);
    sh_amt_fu_496_p3 <= 
        add_ln616_fu_484_p2 when (icmp_ln616_fu_478_p2(0) = '1') else 
        sub_ln616_fu_490_p2;
    shl_ln639_fu_549_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln618_reg_1087),to_integer(unsigned('0' & sext_ln616cast_fu_545_p1(18-1 downto 0)))));
    sub_ln1349_1_fu_726_p2 <= std_logic_vector(unsigned(ap_const_lv40_0) - unsigned(select_ln1349_fu_719_p3));
    sub_ln1349_fu_697_p2 <= std_logic_vector(unsigned(ap_const_lv81_0) - unsigned(mul_ln1349_reg_1183));
    sub_ln616_fu_490_p2 <= std_logic_vector(unsigned(ap_const_lv12_E) - unsigned(F2_fu_472_p2));
    sub_ln859_1_fu_823_p2 <= std_logic_vector(unsigned(empty_290_fu_156) - unsigned(empty_291_fu_160));
    sub_ln859_2_fu_829_p2 <= std_logic_vector(unsigned(empty_292_fu_164) - unsigned(empty_293_fu_168));
    sub_ln859_fu_817_p2 <= std_logic_vector(unsigned(empty_fu_148) - unsigned(empty_289_fu_152));
    tmp_66_fu_702_p4 <= sub_ln1349_fu_697_p2(80 downto 47);
    tmp_68_fu_782_p4 <= grp_fu_667_p2(86 downto 64);
    tmp_fu_594_p3 <= bitcast_ln768_fu_591_p1(31 downto 31);
    tmp_s_fu_737_p4 <= select_ln1349_1_fu_732_p3(39 downto 14);
    trunc_ln1049_fu_751_p1 <= select_ln1349_1_fu_732_p3(14 - 1 downto 0);
    trunc_ln590_fu_406_p1 <= ireg_fu_402_p1(63 - 1 downto 0);
    trunc_ln600_fu_428_p1 <= ireg_fu_402_p1(52 - 1 downto 0);
    trunc_ln618_fu_510_p1 <= man_V_2_fu_460_p3(18 - 1 downto 0);
    trunc_ln621_fu_587_p1 <= ashr_ln621_fu_582_p2(18 - 1 downto 0);
    xor_ln606_fu_562_p2 <= (icmp_ln606_reg_1069 xor ap_const_lv1_1);
    xor_ln617_fu_520_p2 <= (or_ln617_fu_514_p2 xor ap_const_lv1_1);
    zext_ln1029_fu_792_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_68_fu_782_p4),29));
    zext_ln501_fu_440_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_reg_1034),12));
    zext_ln604_fu_450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_18_fu_443_p3),54));
    zext_ln621_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln616_reg_1098),54));
end behav;
