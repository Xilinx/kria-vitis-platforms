-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ISPPipeline_accel_AWBhistogramkernel_17_17_1080_1920_1_21_1_1024_Pipeline_COL_LOOP is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    demosaic_out_data241_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    demosaic_out_data241_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    demosaic_out_data241_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    demosaic_out_data241_empty_n : IN STD_LOGIC;
    demosaic_out_data241_read : OUT STD_LOGIC;
    impop_data1_din : OUT STD_LOGIC_VECTOR (29 downto 0);
    impop_data1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    impop_data1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    impop_data1_full_n : IN STD_LOGIC;
    impop_data1_write : OUT STD_LOGIC;
    void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_23 : IN STD_LOGIC_VECTOR (31 downto 0);
    void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_22 : IN STD_LOGIC_VECTOR (31 downto 0);
    void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_21 : IN STD_LOGIC_VECTOR (31 downto 0);
    void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_20 : IN STD_LOGIC_VECTOR (31 downto 0);
    void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_19 : IN STD_LOGIC_VECTOR (31 downto 0);
    void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_18 : IN STD_LOGIC_VECTOR (31 downto 0);
    void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_17 : IN STD_LOGIC_VECTOR (31 downto 0);
    void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_16 : IN STD_LOGIC_VECTOR (31 downto 0);
    void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_15 : IN STD_LOGIC_VECTOR (31 downto 0);
    void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_14 : IN STD_LOGIC_VECTOR (31 downto 0);
    void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_13 : IN STD_LOGIC_VECTOR (31 downto 0);
    void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_12 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty : IN STD_LOGIC_VECTOR (11 downto 0);
    tmp_hist_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    tmp_hist_V_ce0 : OUT STD_LOGIC;
    tmp_hist_V_we0 : OUT STD_LOGIC;
    tmp_hist_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_hist_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tmp_hist1_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    tmp_hist1_V_ce0 : OUT STD_LOGIC;
    tmp_hist1_V_we0 : OUT STD_LOGIC;
    tmp_hist1_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_hist1_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tmp_hist_V_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    tmp_hist_V_1_ce0 : OUT STD_LOGIC;
    tmp_hist_V_1_we0 : OUT STD_LOGIC;
    tmp_hist_V_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_hist_V_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tmp_hist1_V_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    tmp_hist1_V_1_ce0 : OUT STD_LOGIC;
    tmp_hist1_V_1_we0 : OUT STD_LOGIC;
    tmp_hist1_V_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_hist1_V_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tmp_hist_V_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    tmp_hist_V_2_ce0 : OUT STD_LOGIC;
    tmp_hist_V_2_we0 : OUT STD_LOGIC;
    tmp_hist_V_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_hist_V_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tmp_hist1_V_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    tmp_hist1_V_2_ce0 : OUT STD_LOGIC;
    tmp_hist1_V_2_we0 : OUT STD_LOGIC;
    tmp_hist1_V_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_hist1_V_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tmp_acc1_4_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_acc1_4_out_ap_vld : OUT STD_LOGIC;
    tmp_acc_4_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_acc_4_out_ap_vld : OUT STD_LOGIC;
    tmp1_5_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp1_5_out_ap_vld : OUT STD_LOGIC;
    tmp_5_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_5_out_ap_vld : OUT STD_LOGIC;
    tmp_acc1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_acc1_2_out_ap_vld : OUT STD_LOGIC;
    tmp_acc_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_acc_2_out_ap_vld : OUT STD_LOGIC;
    tmp1_4_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp1_4_out_ap_vld : OUT STD_LOGIC;
    tmp_4_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_4_out_ap_vld : OUT STD_LOGIC;
    tmp_acc1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_acc1_out_ap_vld : OUT STD_LOGIC;
    tmp_acc_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_acc_out_ap_vld : OUT STD_LOGIC;
    tmp1_3_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp1_3_out_ap_vld : OUT STD_LOGIC;
    tmp_3_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    tmp_3_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of ISPPipeline_accel_AWBhistogramkernel_17_17_1080_1920_1_21_1_1024_Pipeline_COL_LOOP is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv16_20 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal icmp_ln515_reg_1220 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal demosaic_out_data241_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal impop_data1_blk_n : STD_LOGIC;
    signal reg_510 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_514 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln515_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln515_reg_1220_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln884_fu_607_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln884_reg_1224 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_627_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_reg_1229 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1_reg_1234 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln548_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln548_reg_1240 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_701_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_reg_1244 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln548_1_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln548_1_reg_1249 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_747_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_10_reg_1253 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln548_2_fu_761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln548_2_reg_1258 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln554_fu_801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln554_reg_1267 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_830_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_reg_1271 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln554_1_fu_851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln554_1_reg_1281 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_880_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_12_reg_1285 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln554_2_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln554_2_reg_1295 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal zext_ln551_fu_679_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln551_1_fu_725_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln551_2_fu_771_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln552_fu_794_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln557_fu_811_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln552_1_fu_844_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln557_1_fu_861_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln552_2_fu_894_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln557_2_fu_911_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln558_fu_945_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln558_1_fu_963_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln558_2_fu_981_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal col_fu_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_3_fu_596_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_col_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln598_fu_637_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln598_1_fu_791_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln598_2_fu_711_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_1_fu_152 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln598_3_fu_840_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_156 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln598_4_fu_757_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_2_fu_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln598_5_fu_890_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_acc_fu_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_acc_6_fu_939_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_tmp_acc_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_tmp_acc_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_acc1_fu_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_acc1_6_fu_1008_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_tmp_acc1_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_tmp_acc1_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_acc_2_fu_172 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_acc_7_fu_957_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_tmp_acc_2_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_tmp_acc_2_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_acc1_2_fu_176 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_acc1_7_fu_1022_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_tmp_acc1_2_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_tmp_acc1_2_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_acc_4_fu_180 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_acc_8_fu_975_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_tmp_acc_4_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_tmp_acc_4_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_acc1_4_fu_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_acc1_8_fu_1036_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_tmp_acc1_4_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_tmp_acc1_4_load_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_cast_fu_518_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_fu_614_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_fu_621_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln884_1_fu_641_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal lhs_V_8_fu_645_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_46_fu_653_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_9_fu_687_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_47_fu_695_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_11_fu_733_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_49_fu_741_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_10_fu_816_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_48_fu_824_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_12_fu_866_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_50_fu_874_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_done_pending_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_412 : BOOLEAN;
    signal ap_condition_326 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component ISPPipeline_accel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component ISPPipeline_accel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    col_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln515_fu_590_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    col_fu_136 <= col_3_fu_596_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    col_fu_136 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;

    tmp1_1_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                tmp1_1_fu_152 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_17;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                tmp1_1_fu_152 <= zext_ln598_3_fu_840_p1;
            end if; 
        end if;
    end process;

    tmp1_2_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                tmp1_2_fu_160 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_21;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                tmp1_2_fu_160 <= zext_ln598_5_fu_890_p1;
            end if; 
        end if;
    end process;

    tmp1_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                tmp1_fu_144 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_13;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                tmp1_fu_144 <= zext_ln598_1_fu_791_p1;
            end if; 
        end if;
    end process;

    tmp_3_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    tmp_3_fu_140 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_12;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    tmp_3_fu_140 <= zext_ln598_fu_637_p1;
                end if;
            end if; 
        end if;
    end process;

    tmp_4_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    tmp_4_fu_148 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_16;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    tmp_4_fu_148 <= zext_ln598_2_fu_711_p1;
                end if;
            end if; 
        end if;
    end process;

    tmp_5_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    tmp_5_fu_156 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_20;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    tmp_5_fu_156 <= zext_ln598_4_fu_757_p1;
                end if;
            end if; 
        end if;
    end process;

    tmp_acc1_2_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                tmp_acc1_2_fu_176 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_19;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                tmp_acc1_2_fu_176 <= tmp_acc1_7_fu_1022_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln554_1_reg_1281 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                tmp_acc1_2_fu_176 <= tmp_hist1_V_1_q0;
            end if; 
        end if;
    end process;

    tmp_acc1_4_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                tmp_acc1_4_fu_184 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_23;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                tmp_acc1_4_fu_184 <= tmp_acc1_8_fu_1036_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln554_2_reg_1295 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                tmp_acc1_4_fu_184 <= tmp_hist1_V_2_q0;
            end if; 
        end if;
    end process;

    tmp_acc1_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                tmp_acc1_fu_168 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_15;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                tmp_acc1_fu_168 <= tmp_acc1_6_fu_1008_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln554_reg_1267 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                tmp_acc1_fu_168 <= tmp_hist1_V_q0;
            end if; 
        end if;
    end process;

    tmp_acc_2_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    tmp_acc_2_fu_172 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_18;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    tmp_acc_2_fu_172 <= tmp_acc_7_fu_957_p2;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln548_1_reg_1249 = ap_const_lv1_0))) then 
                    tmp_acc_2_fu_172 <= tmp_hist_V_1_q0;
                end if;
            end if; 
        end if;
    end process;

    tmp_acc_4_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    tmp_acc_4_fu_180 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_22;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    tmp_acc_4_fu_180 <= tmp_acc_8_fu_975_p2;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln548_2_reg_1258 = ap_const_lv1_0))) then 
                    tmp_acc_4_fu_180 <= tmp_hist_V_2_q0;
                end if;
            end if; 
        end if;
    end process;

    tmp_acc_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    tmp_acc_fu_164 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_14;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    tmp_acc_fu_164 <= tmp_acc_6_fu_939_p2;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln548_reg_1240 = ap_const_lv1_0))) then 
                    tmp_acc_fu_164 <= tmp_hist_V_q0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                icmp_ln554_1_reg_1281 <= icmp_ln554_1_fu_851_p2;
                icmp_ln554_2_reg_1295 <= icmp_ln554_2_fu_901_p2;
                icmp_ln554_reg_1267 <= icmp_ln554_fu_801_p2;
                tmp_12_reg_1285 <= ret_V_50_fu_874_p2(15 downto 6);
                tmp_8_reg_1271 <= ret_V_48_fu_824_p2(15 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln515_reg_1220 <= icmp_ln515_fu_590_p2;
                icmp_ln515_reg_1220_pp0_iter1_reg <= icmp_ln515_reg_1220;
                icmp_ln548_1_reg_1249 <= icmp_ln548_1_fu_715_p2;
                icmp_ln548_2_reg_1258 <= icmp_ln548_2_fu_761_p2;
                icmp_ln548_reg_1240 <= icmp_ln548_fu_669_p2;
                tmp_10_reg_1253 <= ret_V_49_fu_741_p2(15 downto 6);
                tmp_1_reg_1234 <= ret_V_46_fu_653_p2(15 downto 6);
                tmp_6_reg_1244 <= ret_V_47_fu_695_p2(15 downto 6);
                tmp_s_reg_1229 <= ret_V_fu_621_p2(15 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln515_reg_1220 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_510 <= demosaic_out_data241_dout(19 downto 10);
                reg_514 <= demosaic_out_data241_dout(29 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln515_reg_1220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                trunc_ln884_reg_1224 <= trunc_ln884_fu_607_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to2, ap_done_pending_pp0, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_done_pending_pp0 = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, demosaic_out_data241_empty_n, impop_data1_full_n)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((impop_data1_full_n = ap_const_logic_0) or (demosaic_out_data241_empty_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, demosaic_out_data241_empty_n, impop_data1_full_n)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((impop_data1_full_n = ap_const_logic_0) or (demosaic_out_data241_empty_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, demosaic_out_data241_empty_n, impop_data1_full_n)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((impop_data1_full_n = ap_const_logic_0) or (demosaic_out_data241_empty_n = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter0, demosaic_out_data241_empty_n, icmp_ln515_reg_1220, impop_data1_full_n)
    begin
                ap_block_pp0_stage1_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((impop_data1_full_n = ap_const_logic_0) and (icmp_ln515_reg_1220 = ap_const_lv1_0)) or ((icmp_ln515_reg_1220 = ap_const_lv1_0) and (demosaic_out_data241_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, demosaic_out_data241_empty_n, icmp_ln515_reg_1220, impop_data1_full_n)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((impop_data1_full_n = ap_const_logic_0) and (icmp_ln515_reg_1220 = ap_const_lv1_0)) or ((icmp_ln515_reg_1220 = ap_const_lv1_0) and (demosaic_out_data241_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, demosaic_out_data241_empty_n, icmp_ln515_reg_1220, impop_data1_full_n)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((impop_data1_full_n = ap_const_logic_0) and (icmp_ln515_reg_1220 = ap_const_lv1_0)) or ((icmp_ln515_reg_1220 = ap_const_lv1_0) and (demosaic_out_data241_empty_n = ap_const_logic_0))));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage1_iter0_assign_proc : process(demosaic_out_data241_empty_n, icmp_ln515_reg_1220, impop_data1_full_n)
    begin
                ap_block_state2_pp0_stage1_iter0 <= (((impop_data1_full_n = ap_const_logic_0) and (icmp_ln515_reg_1220 = ap_const_lv1_0)) or ((icmp_ln515_reg_1220 = ap_const_lv1_0) and (demosaic_out_data241_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state3_pp0_stage0_iter1_assign_proc : process(demosaic_out_data241_empty_n, impop_data1_full_n)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((impop_data1_full_n = ap_const_logic_0) or (demosaic_out_data241_empty_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_326_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
                ap_condition_326 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_412_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_412 <= ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, icmp_ln515_reg_1220, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (icmp_ln515_reg_1220 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_done_pending_pp0_assign_proc : process(ap_loop_exit_ready, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (not(((ap_loop_exit_ready = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0)))) then 
            ap_done_pending_pp0 <= ap_const_logic_1;
        else 
            ap_done_pending_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_col_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, col_fu_136, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_col_2 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_col_2 <= col_fu_136;
        end if; 
    end process;


    ap_sig_allocacmp_tmp_acc1_2_load_1_assign_proc : process(tmp_hist1_V_1_q0, icmp_ln554_1_reg_1281, tmp_acc1_2_fu_176, tmp_acc1_7_fu_1022_p2, ap_condition_412)
    begin
        if ((ap_const_boolean_1 = ap_condition_412)) then
            ap_sig_allocacmp_tmp_acc1_2_load_1 <= tmp_acc1_7_fu_1022_p2;
        end if;
    end process;


    ap_sig_allocacmp_tmp_acc1_2_load_2_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, tmp_hist1_V_1_q0, ap_block_pp0_stage1, icmp_ln554_1_reg_1281, tmp_acc1_2_fu_176)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln554_1_reg_1281 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_sig_allocacmp_tmp_acc1_2_load_2 <= tmp_hist1_V_1_q0;
        else 
            ap_sig_allocacmp_tmp_acc1_2_load_2 <= tmp_acc1_2_fu_176;
        end if; 
    end process;


    ap_sig_allocacmp_tmp_acc1_4_load_1_assign_proc : process(tmp_hist1_V_2_q0, icmp_ln554_2_reg_1295, tmp_acc1_4_fu_184, tmp_acc1_8_fu_1036_p2, ap_condition_412)
    begin
        if ((ap_const_boolean_1 = ap_condition_412)) then
            ap_sig_allocacmp_tmp_acc1_4_load_1 <= tmp_acc1_8_fu_1036_p2;
        end if;
    end process;


    ap_sig_allocacmp_tmp_acc1_4_load_2_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, tmp_hist1_V_2_q0, ap_block_pp0_stage1, icmp_ln554_2_reg_1295, tmp_acc1_4_fu_184)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln554_2_reg_1295 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_sig_allocacmp_tmp_acc1_4_load_2 <= tmp_hist1_V_2_q0;
        else 
            ap_sig_allocacmp_tmp_acc1_4_load_2 <= tmp_acc1_4_fu_184;
        end if; 
    end process;


    ap_sig_allocacmp_tmp_acc1_load_1_assign_proc : process(tmp_hist1_V_q0, icmp_ln554_reg_1267, tmp_acc1_fu_168, tmp_acc1_6_fu_1008_p2, ap_condition_412)
    begin
        if ((ap_const_boolean_1 = ap_condition_412)) then
            ap_sig_allocacmp_tmp_acc1_load_1 <= tmp_acc1_6_fu_1008_p2;
        end if;
    end process;


    ap_sig_allocacmp_tmp_acc1_load_2_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, tmp_hist1_V_q0, ap_block_pp0_stage1, icmp_ln554_reg_1267, tmp_acc1_fu_168)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln554_reg_1267 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_sig_allocacmp_tmp_acc1_load_2 <= tmp_hist1_V_q0;
        else 
            ap_sig_allocacmp_tmp_acc1_load_2 <= tmp_acc1_fu_168;
        end if; 
    end process;


    ap_sig_allocacmp_tmp_acc_2_load_1_assign_proc : process(tmp_hist_V_1_q0, icmp_ln548_1_reg_1249, tmp_acc_2_fu_172, tmp_acc_7_fu_957_p2, ap_condition_326)
    begin
        if ((ap_const_boolean_1 = ap_condition_326)) then
            ap_sig_allocacmp_tmp_acc_2_load_1 <= tmp_acc_7_fu_957_p2;
        end if;
    end process;


    ap_sig_allocacmp_tmp_acc_2_load_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, tmp_hist_V_1_q0, ap_block_pp0_stage0, icmp_ln548_1_reg_1249, tmp_acc_2_fu_172)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln548_1_reg_1249 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_tmp_acc_2_load_2 <= tmp_hist_V_1_q0;
        else 
            ap_sig_allocacmp_tmp_acc_2_load_2 <= tmp_acc_2_fu_172;
        end if; 
    end process;


    ap_sig_allocacmp_tmp_acc_4_load_1_assign_proc : process(tmp_hist_V_2_q0, icmp_ln548_2_reg_1258, tmp_acc_4_fu_180, tmp_acc_8_fu_975_p2, ap_condition_326)
    begin
        if ((ap_const_boolean_1 = ap_condition_326)) then
            ap_sig_allocacmp_tmp_acc_4_load_1 <= tmp_acc_8_fu_975_p2;
        end if;
    end process;


    ap_sig_allocacmp_tmp_acc_4_load_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, tmp_hist_V_2_q0, ap_block_pp0_stage0, icmp_ln548_2_reg_1258, tmp_acc_4_fu_180)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln548_2_reg_1258 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_tmp_acc_4_load_2 <= tmp_hist_V_2_q0;
        else 
            ap_sig_allocacmp_tmp_acc_4_load_2 <= tmp_acc_4_fu_180;
        end if; 
    end process;


    ap_sig_allocacmp_tmp_acc_load_1_assign_proc : process(tmp_hist_V_q0, icmp_ln548_reg_1240, tmp_acc_fu_164, tmp_acc_6_fu_939_p2, ap_condition_326)
    begin
        if ((ap_const_boolean_1 = ap_condition_326)) then
            ap_sig_allocacmp_tmp_acc_load_1 <= tmp_acc_6_fu_939_p2;
        end if;
    end process;


    ap_sig_allocacmp_tmp_acc_load_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, tmp_hist_V_q0, ap_block_pp0_stage0, icmp_ln548_reg_1240, tmp_acc_fu_164)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln548_reg_1240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_tmp_acc_load_2 <= tmp_hist_V_q0;
        else 
            ap_sig_allocacmp_tmp_acc_load_2 <= tmp_acc_fu_164;
        end if; 
    end process;

    col_3_fu_596_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_col_2) + unsigned(ap_const_lv32_2));

    demosaic_out_data241_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, demosaic_out_data241_empty_n, icmp_ln515_reg_1220, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln515_reg_1220 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            demosaic_out_data241_blk_n <= demosaic_out_data241_empty_n;
        else 
            demosaic_out_data241_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    demosaic_out_data241_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, icmp_ln515_reg_1220, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln515_reg_1220 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            demosaic_out_data241_read <= ap_const_logic_1;
        else 
            demosaic_out_data241_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln515_fu_590_p2 <= "1" when (ap_sig_allocacmp_col_2 = p_cast_fu_518_p1) else "0";
    icmp_ln548_1_fu_715_p2 <= "1" when (tmp_4_fu_148 = zext_ln598_2_fu_711_p1) else "0";
    icmp_ln548_2_fu_761_p2 <= "1" when (tmp_5_fu_156 = zext_ln598_4_fu_757_p1) else "0";
    icmp_ln548_fu_669_p2 <= "1" when (tmp_3_fu_140 = zext_ln598_fu_637_p1) else "0";
    icmp_ln554_1_fu_851_p2 <= "1" when (tmp1_1_fu_152 = zext_ln598_3_fu_840_p1) else "0";
    icmp_ln554_2_fu_901_p2 <= "1" when (tmp1_2_fu_160 = zext_ln598_5_fu_890_p1) else "0";
    icmp_ln554_fu_801_p2 <= "1" when (tmp1_fu_144 = zext_ln598_1_fu_791_p1) else "0";

    impop_data1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, icmp_ln515_reg_1220, impop_data1_full_n, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln515_reg_1220 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            impop_data1_blk_n <= impop_data1_full_n;
        else 
            impop_data1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    impop_data1_din <= demosaic_out_data241_dout;

    impop_data1_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, icmp_ln515_reg_1220, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln515_reg_1220 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            impop_data1_write <= ap_const_logic_1;
        else 
            impop_data1_write <= ap_const_logic_0;
        end if; 
    end process;

    lhs_V_10_fu_816_p3 <= (reg_510 & ap_const_lv6_0);
    lhs_V_11_fu_733_p3 <= (reg_514 & ap_const_lv6_0);
    lhs_V_12_fu_866_p3 <= (reg_514 & ap_const_lv6_0);
    lhs_V_8_fu_645_p3 <= (trunc_ln884_1_fu_641_p1 & ap_const_lv6_0);
    lhs_V_9_fu_687_p3 <= (reg_510 & ap_const_lv6_0);
    lhs_V_fu_614_p3 <= (trunc_ln884_reg_1224 & ap_const_lv6_0);
    p_cast_fu_518_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty),32));
    ret_V_46_fu_653_p2 <= (lhs_V_8_fu_645_p3 or ap_const_lv16_20);
    ret_V_47_fu_695_p2 <= (lhs_V_9_fu_687_p3 or ap_const_lv16_20);
    ret_V_48_fu_824_p2 <= (lhs_V_10_fu_816_p3 or ap_const_lv16_20);
    ret_V_49_fu_741_p2 <= (lhs_V_11_fu_733_p3 or ap_const_lv16_20);
    ret_V_50_fu_874_p2 <= (lhs_V_12_fu_866_p3 or ap_const_lv16_20);
    ret_V_fu_621_p2 <= (lhs_V_fu_614_p3 or ap_const_lv16_20);
    tmp1_3_out <= tmp1_fu_144;

    tmp1_3_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln515_reg_1220_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln515_reg_1220_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp1_3_out_ap_vld <= ap_const_logic_1;
        else 
            tmp1_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_4_out <= tmp1_1_fu_152;

    tmp1_4_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln515_reg_1220_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln515_reg_1220_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp1_4_out_ap_vld <= ap_const_logic_1;
        else 
            tmp1_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_5_out <= tmp1_2_fu_160;

    tmp1_5_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln515_reg_1220_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln515_reg_1220_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp1_5_out_ap_vld <= ap_const_logic_1;
        else 
            tmp1_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_747_p4 <= ret_V_49_fu_741_p2(15 downto 6);
    tmp_12_fu_880_p4 <= ret_V_50_fu_874_p2(15 downto 6);
    tmp_3_out <= tmp_3_fu_140;

    tmp_3_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln515_reg_1220_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln515_reg_1220_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_3_out_ap_vld <= ap_const_logic_1;
        else 
            tmp_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_4_out <= tmp_4_fu_148;

    tmp_4_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln515_reg_1220_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln515_reg_1220_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_4_out_ap_vld <= ap_const_logic_1;
        else 
            tmp_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_5_out <= tmp_5_fu_156;

    tmp_5_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln515_reg_1220_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln515_reg_1220_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_5_out_ap_vld <= ap_const_logic_1;
        else 
            tmp_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_6_fu_701_p4 <= ret_V_47_fu_695_p2(15 downto 6);
    tmp_8_fu_830_p4 <= ret_V_48_fu_824_p2(15 downto 6);
    tmp_acc1_2_out <= tmp_acc1_2_fu_176;

    tmp_acc1_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln515_reg_1220_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln515_reg_1220_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_acc1_2_out_ap_vld <= ap_const_logic_1;
        else 
            tmp_acc1_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_acc1_4_out <= tmp_acc1_4_fu_184;

    tmp_acc1_4_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln515_reg_1220_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln515_reg_1220_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_acc1_4_out_ap_vld <= ap_const_logic_1;
        else 
            tmp_acc1_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_acc1_6_fu_1008_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_tmp_acc1_load_2) + unsigned(ap_const_lv32_1));
    tmp_acc1_7_fu_1022_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_tmp_acc1_2_load_2) + unsigned(ap_const_lv32_1));
    tmp_acc1_8_fu_1036_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_tmp_acc1_4_load_2) + unsigned(ap_const_lv32_1));
    tmp_acc1_out <= tmp_acc1_fu_168;

    tmp_acc1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln515_reg_1220_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln515_reg_1220_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_acc1_out_ap_vld <= ap_const_logic_1;
        else 
            tmp_acc1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_acc_2_out <= tmp_acc_2_fu_172;

    tmp_acc_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln515_reg_1220_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln515_reg_1220_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_acc_2_out_ap_vld <= ap_const_logic_1;
        else 
            tmp_acc_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_acc_4_out <= tmp_acc_4_fu_180;

    tmp_acc_4_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln515_reg_1220_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln515_reg_1220_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_acc_4_out_ap_vld <= ap_const_logic_1;
        else 
            tmp_acc_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_acc_6_fu_939_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_tmp_acc_load_2) + unsigned(ap_const_lv32_1));
    tmp_acc_7_fu_957_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_tmp_acc_2_load_2) + unsigned(ap_const_lv32_1));
    tmp_acc_8_fu_975_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_tmp_acc_4_load_2) + unsigned(ap_const_lv32_1));
    tmp_acc_out <= tmp_acc_fu_164;

    tmp_acc_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln515_reg_1220_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln515_reg_1220_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_acc_out_ap_vld <= ap_const_logic_1;
        else 
            tmp_acc_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist1_V_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln557_1_fu_861_p1, zext_ln558_1_fu_963_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_hist1_V_1_address0 <= zext_ln558_1_fu_963_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_hist1_V_1_address0 <= zext_ln557_1_fu_861_p1(10 - 1 downto 0);
        else 
            tmp_hist1_V_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_hist1_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            tmp_hist1_V_1_ce0 <= ap_const_logic_1;
        else 
            tmp_hist1_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_hist1_V_1_d0 <= ap_sig_allocacmp_tmp_acc1_2_load_1;

    tmp_hist1_V_1_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln554_1_fu_851_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln554_1_fu_851_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_hist1_V_1_we0 <= ap_const_logic_1;
        else 
            tmp_hist1_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist1_V_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln557_2_fu_911_p1, zext_ln558_2_fu_981_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_hist1_V_2_address0 <= zext_ln558_2_fu_981_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_hist1_V_2_address0 <= zext_ln557_2_fu_911_p1(10 - 1 downto 0);
        else 
            tmp_hist1_V_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_hist1_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            tmp_hist1_V_2_ce0 <= ap_const_logic_1;
        else 
            tmp_hist1_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_hist1_V_2_d0 <= ap_sig_allocacmp_tmp_acc1_4_load_1;

    tmp_hist1_V_2_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln554_2_fu_901_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln554_2_fu_901_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_hist1_V_2_we0 <= ap_const_logic_1;
        else 
            tmp_hist1_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist1_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln557_fu_811_p1, zext_ln558_fu_945_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_hist1_V_address0 <= zext_ln558_fu_945_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_hist1_V_address0 <= zext_ln557_fu_811_p1(10 - 1 downto 0);
        else 
            tmp_hist1_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_hist1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            tmp_hist1_V_ce0 <= ap_const_logic_1;
        else 
            tmp_hist1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_hist1_V_d0 <= ap_sig_allocacmp_tmp_acc1_load_1;

    tmp_hist1_V_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln554_fu_801_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln554_fu_801_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_hist1_V_we0 <= ap_const_logic_1;
        else 
            tmp_hist1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist_V_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln551_1_fu_725_p1, zext_ln552_1_fu_844_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                tmp_hist_V_1_address0 <= zext_ln552_1_fu_844_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                tmp_hist_V_1_address0 <= zext_ln551_1_fu_725_p1(10 - 1 downto 0);
            else 
                tmp_hist_V_1_address0 <= "XXXXXXXXXX";
            end if;
        else 
            tmp_hist_V_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_hist_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            tmp_hist_V_1_ce0 <= ap_const_logic_1;
        else 
            tmp_hist_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_hist_V_1_d0 <= ap_sig_allocacmp_tmp_acc_2_load_1;

    tmp_hist_V_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln548_1_fu_715_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln548_1_fu_715_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_hist_V_1_we0 <= ap_const_logic_1;
        else 
            tmp_hist_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist_V_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln551_2_fu_771_p1, zext_ln552_2_fu_894_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                tmp_hist_V_2_address0 <= zext_ln552_2_fu_894_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                tmp_hist_V_2_address0 <= zext_ln551_2_fu_771_p1(10 - 1 downto 0);
            else 
                tmp_hist_V_2_address0 <= "XXXXXXXXXX";
            end if;
        else 
            tmp_hist_V_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_hist_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            tmp_hist_V_2_ce0 <= ap_const_logic_1;
        else 
            tmp_hist_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_hist_V_2_d0 <= ap_sig_allocacmp_tmp_acc_4_load_1;

    tmp_hist_V_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln548_2_fu_761_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln548_2_fu_761_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_hist_V_2_we0 <= ap_const_logic_1;
        else 
            tmp_hist_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_hist_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln551_fu_679_p1, zext_ln552_fu_794_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                tmp_hist_V_address0 <= zext_ln552_fu_794_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                tmp_hist_V_address0 <= zext_ln551_fu_679_p1(10 - 1 downto 0);
            else 
                tmp_hist_V_address0 <= "XXXXXXXXXX";
            end if;
        else 
            tmp_hist_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_hist_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            tmp_hist_V_ce0 <= ap_const_logic_1;
        else 
            tmp_hist_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_hist_V_d0 <= ap_sig_allocacmp_tmp_acc_load_1;

    tmp_hist_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln548_fu_669_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln548_fu_669_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_hist_V_we0 <= ap_const_logic_1;
        else 
            tmp_hist_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_s_fu_627_p4 <= ret_V_fu_621_p2(15 downto 6);
    trunc_ln884_1_fu_641_p1 <= demosaic_out_data241_dout(10 - 1 downto 0);
    trunc_ln884_fu_607_p1 <= demosaic_out_data241_dout(10 - 1 downto 0);
    zext_ln551_1_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_148),64));
    zext_ln551_2_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_156),64));
    zext_ln551_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_140),64));
    zext_ln552_1_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_reg_1244),64));
    zext_ln552_2_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_reg_1253),64));
    zext_ln552_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_reg_1229),64));
    zext_ln557_1_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp1_1_fu_152),64));
    zext_ln557_2_fu_911_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp1_2_fu_160),64));
    zext_ln557_fu_811_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp1_fu_144),64));
    zext_ln558_1_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_reg_1271),64));
    zext_ln558_2_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_reg_1285),64));
    zext_ln558_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_1234),64));
    zext_ln598_1_fu_791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_1234),32));
    zext_ln598_2_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_701_p4),32));
    zext_ln598_3_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_830_p4),32));
    zext_ln598_4_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_747_p4),32));
    zext_ln598_5_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_880_p4),32));
    zext_ln598_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_627_p4),32));
end behav;
