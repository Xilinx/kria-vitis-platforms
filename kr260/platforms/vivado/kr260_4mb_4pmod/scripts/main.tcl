# (C) Copyright 2020 - 2022 Xilinx, Inc.
# Copyright (C) 2024, Advanced Micro Devices, Inc
# SPDX-License-Identifier: Apache-2.0

#Set Board Preset 
set_param board.repoPaths {../board_files/kr260_carrier/1.0 ../board_files/kr260_som/1.0}

set proj_name kr260_4mb_4pmod
set bdc_name mb_subsystem_0
set bdc1_tcl_file_name mb_subsystem_0_bd.tcl
set bdc2_tcl_file_name iop_pmod_bdc.tcl
set top_tcl_file_name top_bd.tcl
set proj_dir ./project
set proj_board [get_board_parts "*:kr260_som:*" -latest_file_version]
set bd_tcl_dir ./scripts
set board robotics_som
set device k26
set rev None
set output {xsa}
set xdc_list {./xdc/pin_timing.xdc}
set ip_repo_path {./ip ./ip/iop_pmod/user_ip}
set src_repo_path {./src}
set jobs 8

# parse arguments
for { set i 0 } { $i < $argc } { incr i } {
  # jobs
  if { [lindex $argv $i] == "-jobs" } {
    incr i
    set jobs [lindex $argv $i]
  }
}

create_project -name $proj_name -force -dir $proj_dir -part [get_property PART_NAME [get_board_parts $proj_board]]
set_property board_part $proj_board [current_project]

import_files -fileset constrs_1 $xdc_list


set_property board_connections {som240_2_connector xilinx.com:kr260_carrier:som240_2_connector:1.0 som240_1_connector xilinx.com:kr260_carrier:som240_1_connector:1.0}  [current_project]

set_property ip_repo_paths $ip_repo_path [current_project]
update_ip_catalog

puts "### sourcing the BDC1 tcl file"
source $bd_tcl_dir/$bdc1_tcl_file_name
puts "### sourcing the BDC2 tcl file"
source $bd_tcl_dir/$bdc2_tcl_file_name
puts "### sourcing the top BD tcl file"
source $bd_tcl_dir/$top_tcl_file_name

# Create block diagram design and set as current design
set design_name $proj_name
#create_bd_design $proj_name
current_bd_design $proj_name

# Set current bd instance as root of current design
set parentCell [get_bd_cells /]
set parentObj [get_bd_cells $parentCell]
current_bd_instance $parentObj

#set_property IODELAY_GROUP tri_mode_ethernet_mac_iodelay_grp1 [get_cells kr260_4mb_4pmod_i/mb_subsystem_0/axi_ethernet_0/inst/mac/inst/tri_mode_ethernet_mac_idelayctrl_common_i]
#set_property IODELAY_GROUP tri_mode_ethernet_mac_iodelay_grp2 [get_cells kr260_4mb_4pmod_i/mb_subsystem_1/axi_ethernet_0/inst/mac/inst/tri_mode_ethernet_mac_idelayctrl_common_i]


save_bd_design


make_wrapper -files [get_files $proj_dir/${proj_name}.srcs/sources_1/bd/$proj_name/${proj_name}.bd] -top
import_files -force -norecurse $proj_dir/${proj_name}.srcs/sources_1/bd/$proj_name/hdl/${proj_name}_wrapper.v
update_compile_order
set_property top ${proj_name}_wrapper [current_fileset]
update_compile_order -fileset sources_1


save_bd_design
validate_bd_design
generate_target all [get_files $proj_dir/${proj_name}.srcs/sources_1/bd/$proj_name/${proj_name}.bd]


set fd [open $proj_dir/README.hw w]

puts $fd "##########################################################################"
puts $fd "This is a brief document containing design specific details for : ${board}"
puts $fd "This is auto-generated by Petalinux ref-design builder created @ [clock format [clock seconds] -format {%a %b %d %H:%M:%S %Z %Y}]"
puts $fd "##########################################################################"

set board_part [get_board_parts [current_board_part -quiet]]
if { $board_part != ""} {
	puts $fd "BOARD: $board_part"
}

set design_name [get_property NAME [get_bd_designs]]
puts $fd "BLOCK DESIGN: $design_name"


set columns {%50s%30s%15s%50s}
puts $fd [string repeat - 150]
puts $fd [format $columns "MODULE INSTANCE NAME" "IP TYPE" "IP VERSION" "IP"]
puts $fd [string repeat - 150]

foreach ip [get_ips] {
	set catlg_ip [get_ipdefs -all [get_property IPDEF $ip]]
	puts $fd [format $columns [get_property NAME $ip] [get_property NAME $catlg_ip] [get_property VERSION $catlg_ip] [get_property VLNV $catlg_ip]]
}

close $fd

set_property synth_checkpoint_mode Hierarchical [get_files $proj_dir/${proj_name}.srcs/sources_1/bd/$proj_name/${proj_name}.bd]

set_property platform.board_id $proj_name [current_project]

set_property platform.default_output_type "xclbin" [current_project]

set_property platform.design_intent.datacenter false [current_project]

set_property platform.design_intent.embedded true [current_project]

set_property platform.design_intent.external_host false [current_project]

set_property platform.design_intent.server_managed false [current_project]

set_property platform.extensible true [current_project]

set_property platform.platform_state "pre_synth" [current_project]

set_property platform.name $proj_name [current_project]

set_property platform.vendor "xilinx" [current_project]

set_property platform.version "1.0" [current_project]

launch_runs synth_1 -jobs $jobs
wait_on_run synth_1

set_property strategy Performance_ExplorePostRoutePhysOpt [get_runs impl_1]
set_property STEPS.WRITE_BITSTREAM.ARGS.BIN_FILE true [get_runs impl_1]
launch_runs impl_1 -to_step write_bitstream
wait_on_run impl_1

write_hw_platform -force -include_bit  -file $proj_dir/${proj_name}.xsa
validate_hw_platform -verbose $proj_dir/${proj_name}.xsa

#write out the address map as csv for documentation purposes
puts "writing the address map as csv for documentation purposes here: ${proj_dir}/amap.csv"
open_bd_design ${proj_dir}/${proj_name}.srcs/sources_1/bd/${proj_name}/${proj_name}.bd
assign_bd_address -export_to_file ${proj_dir}/amap.csv [get_bd_addr_segs {/mb_subsystem_0/microblaze_0_local_memory/dlmb_bram_if_cntlr/SLMB /mb_subsystem_0/microblaze_0_axi_intc/S_AXI /mdm_1/S_AXI /mb_subsystem_0/timer/S_AXI /mb_subsystem_0/axi_ethernet_0/s_axi /mb_subsystem_0/axi_ethernet_0_dma/S_AXI_LITE /mb_subsystem_0/axi_uartlite_0/S_AXI /mb_subsystem_0/gpio/S_AXI /mb_subsystem_0/iic/S_AXI /mb_subsystem_0/io_switch/S_AXI /mb_subsystem_0/spi/AXI_LITE /mb_subsystem_0/axi_timer_0/S_AXI /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /mb_subsystem_0/microblaze_0_local_memory/dlmb_bram_if_cntlr/SLMB1 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /mb_subsystem_1/microblaze_0_local_memory/dlmb_bram_if_cntlr/SLMB /mb_subsystem_1/microblaze_0_axi_intc/S_AXI /mdm_1/S_AXI /mb_subsystem_1/timer/S_AXI /mb_subsystem_1/axi_ethernet_0/s_axi /mb_subsystem_1/axi_ethernet_0_dma/S_AXI_LITE /mb_subsystem_1/axi_uartlite_0/S_AXI /mb_subsystem_1/gpio/S_AXI /mb_subsystem_1/iic/S_AXI /mb_subsystem_1/io_switch/S_AXI /mb_subsystem_1/spi/AXI_LITE /mb_subsystem_1/axi_timer_0/S_AXI /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /mb_subsystem_1/microblaze_0_local_memory/dlmb_bram_if_cntlr/SLMB1 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /mdm_1/S_AXI /iop_pmod_4/spi/AXI_LITE /mdm_1/S_AXI /iop_pmod_4/iic/S_AXI /iop_pmod_4/gpio/S_AXI /iop_pmod_4/timer/S_AXI /iop_pmod_4/intc/S_AXI /iop_pmod_4/intr/S_AXI /iop_pmod_4/axi_uartlite_0/S_AXI /iop_pmod_4/io_switch/S_AXI /mdm_1/S_AXI /mb_subsystem_0/microblaze_0_axi_intc/S_AXI /mdm_1/S_AXI /mb_subsystem_0/timer/S_AXI /mb_subsystem_0/axi_ethernet_0/s_axi /mb_subsystem_0/axi_ethernet_0_dma/S_AXI_LITE /mb_subsystem_0/axi_uartlite_0/S_AXI /mb_subsystem_0/gpio/S_AXI /mb_subsystem_0/iic/S_AXI /mb_subsystem_0/io_switch/S_AXI /mb_subsystem_0/spi/AXI_LITE /mb_subsystem_0/axi_timer_0/S_AXI /axi_uartlite_1/S_AXI /iop_pmod_3/mb_bram_ctrl/S_AXI /iop_pmod_4/mb_bram_ctrl/S_AXI /mb_subsystem_1/microblaze_0_local_memory/axi_bram_ctrl_0/S_AXI /iop_pmod_3/spi/AXI_LITE /iop_pmod_3/iic/S_AXI /axi_intc_0/S_AXI /mb_subsystem_1/spi/AXI_LITE /mb_subsystem_1/axi_timer_0/S_AXI /mb_subsystem_1/microblaze_0_axi_intc/S_AXI /mb_subsystem_1/timer/S_AXI /mb_subsystem_1/axi_ethernet_0/s_axi /mb_subsystem_1/axi_ethernet_0_dma/S_AXI_LITE /mb_subsystem_1/axi_uartlite_0/S_AXI /mb_subsystem_1/gpio/S_AXI /mb_subsystem_1/iic/S_AXI /mb_subsystem_1/io_switch/S_AXI /iop_pmod_3/axi_uartlite_0/S_AXI /iop_pmod_3/io_switch/S_AXI /iop_pmod_3/intr/S_AXI /axi_uartlite_0/S_AXI /mb_subsystem_0/microblaze_0_local_memory/axi_bram_ctrl_0/S_AXI /iop_pmod_3/intc/S_AXI /iop_pmod_3/gpio/S_AXI /iop_pmod_3/timer/S_AXI /iop_pmod_4/lmb_0/lmb_bram_if_cntlr/SLMB1 /iop_pmod_4/spi/AXI_LITE /iop_pmod_4/iic/S_AXI /iop_pmod_4/io_switch/S_AXI /iop_pmod_4/gpio/S_AXI /iop_pmod_4/timer/S_AXI /iop_pmod_4/intc/S_AXI /iop_pmod_4/intr/S_AXI /mdm_1/S_AXI /iop_pmod_4/axi_uartlite_0/S_AXI /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /PS_0/SAXIGP3 /iop_pmod_4/lmb_0/lmb_bram_if_cntlr/SLMB /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /iop_pmod_3/lmb_0/lmb_bram_if_cntlr/SLMB1 /iop_pmod_3/spi/AXI_LITE /iop_pmod_3/iic/S_AXI /iop_pmod_3/io_switch/S_AXI /iop_pmod_3/gpio/S_AXI /iop_pmod_3/timer/S_AXI /iop_pmod_3/intc/S_AXI /iop_pmod_3/intr/S_AXI /mdm_1/S_AXI /iop_pmod_3/axi_uartlite_0/S_AXI /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /PS_0/SAXIGP2 /iop_pmod_3/lmb_0/lmb_bram_if_cntlr/SLMB}] -force


exit

